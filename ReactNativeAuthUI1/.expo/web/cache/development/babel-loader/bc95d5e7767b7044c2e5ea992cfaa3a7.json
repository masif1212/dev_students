{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { styles, toastConfig } from \"../../../style\";\nimport Toast from \"react-native-toast-message\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useLoginTeacherMutation } from \"../../../services/userAuthApi\";\nimport { storeToken } from \"../../../services/AsyncStorageService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TeacherLoginScreen = function TeacherLoginScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var clearTextInput = function clearTextInput() {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  var _useLoginTeacherMutat = useLoginTeacherMutation(),\n      _useLoginTeacherMutat2 = _slicedToArray(_useLoginTeacherMutat, 1),\n      loginTeacher = _useLoginTeacherMutat2[0];\n\n  var handleFormSubmit = function handleFormSubmit() {\n    var formData, res;\n    return _regeneratorRuntime.async(function handleFormSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email && password)) {\n              _context.next = 13;\n              break;\n            }\n\n            formData = {\n              email: email,\n              password: password\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(loginTeacher(formData));\n\n          case 4:\n            res = _context.sent;\n\n            if (!(res.data.status === \"success\")) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(storeToken(res.data.token));\n\n          case 8:\n            clearTextInput();\n            navigation.navigate(\"SchoolAdminPannel\");\n\n          case 10:\n            if (res.data.status === \"failed\") {\n              Toast.show({\n                type: \"warning\",\n                position: \"top\",\n                topOffset: 0,\n                text1: res.data.message\n              });\n            }\n\n            _context.next = 14;\n            break;\n\n          case 13:\n            Toast.show({\n              type: \"warning\",\n              position: \"top\",\n              topOffset: 0,\n              text1: \"All fields are Required\"\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(ScrollView, {\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsxs(View, {\n        style: styleOne.card,\n        children: [_jsx(View, {\n          children: _jsx(Text, {\n            style: styleOne.heading,\n            children: \"Welcome\"\n          })\n        }), _jsx(Text, {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Sign in and get started\"\n        })]\n      }), _jsx(View, {\n        style: {\n          height: 20\n        },\n        children: _jsx(Toast, {\n          config: toastConfig\n        })\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 30\n        },\n        children: [_jsx(View, {\n          style: styles.inputWithLabel,\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: email,\n            onChangeText: setEmail,\n            placeholder: \"Write Your Email\",\n            keyboardType: \"email-address\"\n          })\n        }), _jsx(View, {\n          style: styles.inputWithLabel,\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: password,\n            onChangeText: setPassword,\n            placeholder: \"Write Your Password\",\n            secureTextEntry: true\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: handleFormSubmit,\n            style: {\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              padding: 15,\n              width: \"100%\",\n              marginVertical: 5,\n              borderRadius: 50,\n              marginBottom: 60,\n              fontWeight: \"bold\",\n              backgroundColor: \"#5062BD\",\n              elevation: 1,\n              marginTop: 30\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"white\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: \"Login\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: _jsx(View, {\n            style: {\n              flex: 1,\n              marginBottom: 20\n            },\n            children: _jsx(TouchableWithoutFeedback, {\n              onPress: function onPress() {\n                navigation.navigate(\"SendPasswordResetEmail\");\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Forgot Password\"\n              })\n            })\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styleOne = StyleSheet.create({\n  input: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    padding: 15,\n    fontSize: 14,\n    fontWeight: \"400\",\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    marginBottom: 10\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"600\",\n    marginBottom: 10,\n    color: \"#5062BD\"\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    borderBottomRightRadius: 76,\n    paddingVertical: 80,\n    paddingHorizontal: 25,\n    elevation: 4,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    bottom: 40\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\"\n  }\n});\nexport default TeacherLoginScreen;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/auth/teacherLogin.js"],"names":["React","useState","SafeAreaView","styles","toastConfig","Toast","useNavigation","useLoginTeacherMutation","storeToken","TeacherLoginScreen","navigation","email","setEmail","password","setPassword","clearTextInput","loginTeacher","handleFormSubmit","formData","res","data","status","token","navigate","show","type","position","topOffset","text1","message","styleOne","card","heading","fontWeight","height","marginHorizontal","inputWithLabel","input","justifyContent","alignItems","padding","width","marginVertical","borderRadius","marginBottom","backgroundColor","elevation","marginTop","color","flex","StyleSheet","create","fontSize","borderBottomColor","borderBottomWidth","borderBottomRightRadius","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","bottom","container","flexDirection"],"mappings":"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","sourcesContent":["import {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    Button,\r\n    ScrollView,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n  } from \"react-native\";\r\n  import React, { useState } from \"react\";\r\n  import { SafeAreaView } from \"react-native-safe-area-context\";\r\n  import { styles, toastConfig } from \"../../../style\";\r\n  import Toast from \"react-native-toast-message\";\r\n  import { useNavigation } from \"@react-navigation/native\";\r\n  import { useLoginTeacherMutation } from \"../../../services/userAuthApi\";\r\n  import { storeToken } from \"../../../services/AsyncStorageService\";\r\n  \r\n  const TeacherLoginScreen = () => {\r\n    const navigation = useNavigation();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n  \r\n    const clearTextInput = () => {\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    };\r\n  \r\n    const [loginTeacher] = useLoginTeacherMutation();\r\n  \r\n    const handleFormSubmit = async () => {\r\n      if (email && password) {\r\n        const formData = { email, password };\r\n        const res = await loginTeacher(formData);\r\n        if (res.data.status === \"success\") {\r\n          await storeToken(res.data.token); // Store Token in Storage\r\n          clearTextInput();\r\n          navigation.navigate(\"SchoolAdminPannel\");\r\n        }\r\n        if (res.data.status === \"failed\") {\r\n          Toast.show({\r\n            type: \"warning\",\r\n            position: \"top\",\r\n            topOffset: 0,\r\n            text1: res.data.message,\r\n          });\r\n        }\r\n      } else {\r\n        Toast.show({\r\n          type: \"warning\",\r\n          position: \"top\",\r\n          topOffset: 0,\r\n          text1: \"All fields are Required\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <SafeAreaView>\r\n        <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n          <View style={styleOne.card}>\r\n            <View>\r\n              <Text style={styleOne.heading}>Welcome</Text>\r\n            </View>\r\n  \r\n            <Text style={{ fontWeight: \"bold\" }}>Sign in and get started</Text>\r\n          </View>\r\n          <View style={{ height: 20}}>\r\n          <Toast config={toastConfig} />\r\n          </View>\r\n          <View style={{ marginHorizontal: 30 }}>\r\n            <View style={styles.inputWithLabel}>\r\n              <TextInput\r\n                style={styleOne.input}\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                placeholder=\"Write Your Email\"\r\n                keyboardType=\"email-address\"\r\n              />\r\n            </View>\r\n  \r\n            <View style={styles.inputWithLabel}>\r\n              <TextInput\r\n                style={styleOne.input}\r\n                value={password}\r\n                onChangeText={setPassword}\r\n                placeholder=\"Write Your Password\"\r\n                secureTextEntry={true}\r\n              />\r\n            </View>\r\n  \r\n            <View>\r\n              <TouchableOpacity\r\n                onPress={handleFormSubmit}\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  padding: 15,\r\n                  width: \"100%\",\r\n                  marginVertical: 5,\r\n                  borderRadius: 50,\r\n                  marginBottom: 60,\r\n                  fontWeight: \"bold\",\r\n                  backgroundColor: \"#5062BD\",\r\n                  elevation: 1,\r\n                  marginTop: 30,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: \"white\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  Login\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n  \r\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n              <View style={{ flex: 1, marginBottom: 20 }}>\r\n                <TouchableWithoutFeedback\r\n                  onPress={() => {\r\n                    navigation.navigate(\"SendPasswordResetEmail\");\r\n                  }}\r\n                >\r\n                  <Text style={{ fontWeight: \"bold\" }}>Forgot Password</Text>\r\n                </TouchableWithoutFeedback>\r\n              </View>\r\n  \r\n           \r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n  \r\n  const styleOne = StyleSheet.create({\r\n    input: {\r\n      backgroundColor: \"transparent\",\r\n      width: \"100%\",\r\n      padding: 15,\r\n      fontSize: 14,\r\n      fontWeight: \"400\",\r\n      borderBottomColor: \"gray\",\r\n      borderBottomWidth: 1,\r\n      marginBottom: 10,\r\n    },\r\n    heading: {\r\n      fontSize: 24,\r\n      fontWeight: \"600\",\r\n      marginBottom: 10,\r\n      color: \"#5062BD\",\r\n    },\r\n    card: {\r\n      backgroundColor: \"#ffffff\",\r\n      borderBottomRightRadius: 76,\r\n      paddingVertical: 80,\r\n      paddingHorizontal: 25,\r\n      // width: '100%',\r\n      elevation: 4,\r\n  \r\n      shadowColor: \"#000\",\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 1,\r\n      bottom: 40,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"white\",\r\n      justifyContent: \"center\",\r\n    },\r\n  });\r\n  \r\n  export default TeacherLoginScreen;\r\n  "]},"metadata":{},"sourceType":"module"}