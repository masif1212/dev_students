{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { styles, toastConfig } from \"../../../style\";\nimport Toast from \"react-native-toast-message\";\nimport { useRegisterStudentMutation } from \"../../../services/userAuthApi\";\nimport { storeToken } from \"../../../services/AsyncStorageService\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateStudentForm = function CreateStudentForm() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      first_name = _useState4[0],\n      setFirst_Name = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      last_name = _useState6[0],\n      setLast_Name = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      father_name = _useState8[0],\n      setFather_Name = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      father_cnic = _useState10[0],\n      setFather_cnic = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      contact = _useState12[0],\n      setContact = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      emergency_contact = _useState14[0],\n      setEmergency_Contact = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      address_1 = _useState16[0],\n      setAdress_1 = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      address_2 = _useState18[0],\n      setAdress_2 = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      roll_no = _useState20[0],\n      setRoll_no = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      student_class = _useState22[0],\n      setStudent_class = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      section = _useState24[0],\n      setSection = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      city = _useState26[0],\n      setCity = _useState26[1];\n\n  var clearTextInput = function clearTextInput() {\n    setFirst_Name(\"\");\n    setLast_Name(\"\");\n    setFather_Name(\"\");\n    setFather_cnic(\"\");\n    setContact(\"\");\n    setEmergency_Contact(\"\");\n    setAdress_1(\"\");\n    setAdress_2(\"\");\n    setRoll_no(\"\");\n    setStudent_class(\"\");\n    setSection(\"\");\n    setCity(\"\");\n  };\n\n  var navigation = useNavigation();\n\n  var _useRegisterStudentMu = useRegisterStudentMutation(),\n      _useRegisterStudentMu2 = _slicedToArray(_useRegisterStudentMu, 1),\n      registerStudent = _useRegisterStudentMu2[0];\n\n  var handleFormSubmit = function handleFormSubmit() {\n    var formData, res;\n    return _regeneratorRuntime.async(function handleFormSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(image, first_name, last_name, father_name, father_cnic, contact, roll_no, emergency_contact, address_1, address_2, student_class, section, city)) {\n              _context.next = 13;\n              break;\n            }\n\n            formData = {\n              image: image,\n              first_name: first_name,\n              last_name: last_name,\n              father_name: father_name,\n              father_cnic: father_cnic,\n              contact: contact,\n              roll_no: roll_no,\n              emergency_contact: emergency_contact,\n              address_1: address_1,\n              address_2: address_2,\n              student_class: student_class,\n              city: city,\n              section: section\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(registerStudent(formData));\n\n          case 4:\n            res = _context.sent;\n\n            if (!(res.data.status === \"success\")) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(storeToken(res.data.token));\n\n          case 8:\n            clearTextInput();\n            navigation.navigate(\"CreateStudentForm\");\n\n          case 10:\n            if (res.data.status === \"failed\") {\n              Toast.show({\n                type: \"warning\",\n                position: \"top\",\n                topOffset: 0,\n                text1: res.data.message\n              });\n            }\n\n            _context.next = 14;\n            break;\n\n          case 13:\n            Toast.show({\n              type: \"warning\",\n              position: \"top\",\n              topOffset: 0,\n              text1: \"All fields are Required\"\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      height: \"100%\",\n      backgroundColor: \"#ffffff\"\n    },\n    children: [_jsxs(View, {\n      style: styleOne.buttonContainer,\n      children: [_jsx(View, {\n        style: styleOne.buttonStyle,\n        children: _jsxs(TouchableOpacity, {\n          onPress: pickImage,\n          children: [_jsx(Icon, {\n            style: {\n              marginRight: 12,\n              position: \"absolute\",\n              left: 60,\n              bottom: 30,\n              color: \"green\"\n            },\n            name: \"pluscircle\",\n            color: \"#c9c9c9\",\n            size: 14\n          }), image ? _jsx(Image, {\n            source: {\n              uri: image\n            },\n            style: {\n              width: 100,\n              height: 100,\n              borderRadius: 50\n            }\n          }) : _jsx(Text, {\n            children: \"Add Photo\"\n          })]\n        })\n      }), _jsx(Toast, {\n        config: toastConfig\n      })]\n    }), _jsxs(ScrollView, {\n      keyboardShouldPersistTaps: \"handled\",\n      style: {\n        height: '100%'\n      },\n      children: [_jsxs(View, {\n        style: {\n          marginLeft: 25\n        },\n        children: [_jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: first_name,\n            onChangeText: setFirst_Name,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Write Your First Name\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: last_name,\n            onChangeText: setLast_Name,\n            placeholder: \"Write Your Last Name\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            keyboardType: \"email-address\",\n            value: father_name,\n            onChangeText: setFather_Name,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Write Your Father Name\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: father_cnic,\n            onChangeText: setFather_cnic,\n            placeholder: \"Father CNIC (XXXXX-XXXXXXX-X)\",\n            placeholderTextColor: \"gray\",\n            keyboardType: \"phone-pad\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: contact,\n            onChangeText: setContact,\n            placeholder: \"Contact\",\n            placeholderTextColor: \"gray\",\n            keyboardType: \"numeric\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: emergency_contact,\n            onChangeText: setEmergency_Contact,\n            placeholder: \"Emergency Contact\",\n            placeholderTextColor: \"gray\",\n            keyboardType: \"numeric\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: address_1,\n            onChangeText: setAdress_1,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Address 1\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: address_2,\n            onChangeText: setAdress_2,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Address 2\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: roll_no,\n            onChangeText: setRoll_no,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Set Student Roll No.\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: student_class,\n            onChangeText: setStudent_class,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Student Class\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: section,\n            onChangeText: setSection,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Section\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: city,\n            onChangeText: setCity,\n            placeholderTextColor: \"gray\",\n            placeholder: \"City\"\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: handleFormSubmit,\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: 15,\n            width: \"90%\",\n            borderRadius: 50,\n            marginBottom: 10,\n            fontWeight: \"bold\",\n            backgroundColor: \"#5062BD\",\n            elevation: 1,\n            marginTop: 50\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: \"Sign Up\"\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          alignItems: 'flex-end',\n          marginRight: 25\n        },\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            navigation.navigate(\"AdminLogin\");\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: \"bold\",\n              paddingBottom: 50,\n              color: 'gray'\n            },\n            children: \"Already Registered ? Login\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nvar styleOne = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    margin: 0\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    borderBottomRightRadius: 76,\n    paddingVertical: 50,\n    paddingHorizontal: 25,\n    elevation: 4,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1\n  },\n  buttonContainer: {\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"600\",\n    marginBottom: 10,\n    color: \"#5062BD\"\n  },\n  cardContainer: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  buttonStyle: {\n    width: 100,\n    height: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    borderRadius: 100,\n    borderColor: \"#5062BD\",\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderRadius: 50,\n    marginTop: 20\n  },\n  constainerStyle: {\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    padding: 0,\n    width: \"90%\",\n    fontWeight: \"bold\",\n    backgroundColor: \"transparent\",\n    elevation: 0,\n    borderBottomWidth: 1,\n    borderColor: \"gray\"\n  },\n  input: {\n    backgroundColor: \"transparent\",\n    width: \"90%\",\n    padding: 15,\n    fontSize: 14,\n    fontWeight: \"400\",\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    marginBottom: 10\n  }\n});\nexport default CreateStudentForm;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/schooladmin/CreateStudentForm.js"],"names":["React","useState","useNavigation","SafeAreaView","styles","toastConfig","Toast","useRegisterStudentMutation","storeToken","Icon","ImagePicker","CreateStudentForm","image","setImage","first_name","setFirst_Name","last_name","setLast_Name","father_name","setFather_Name","father_cnic","setFather_cnic","contact","setContact","emergency_contact","setEmergency_Contact","address_1","setAdress_1","address_2","setAdress_2","roll_no","setRoll_no","student_class","setStudent_class","section","setSection","city","setCity","clearTextInput","navigation","registerStudent","handleFormSubmit","formData","res","data","status","token","navigate","show","type","position","topOffset","text1","message","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","height","backgroundColor","styleOne","buttonContainer","buttonStyle","marginRight","left","bottom","color","width","borderRadius","marginLeft","input","justifyContent","alignItems","padding","marginBottom","fontWeight","elevation","marginTop","paddingBottom","StyleSheet","create","container","margin","card","borderBottomRightRadius","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","heading","fontSize","cardContainer","flex","borderColor","borderWidth","constainerStyle","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { styles, toastConfig } from \"../../../style\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { useRegisterStudentMutation } from \"../../../services/userAuthApi\";\r\nimport { storeToken } from \"../../../services/AsyncStorageService\";\r\nimport Icon from \"react-native-vector-icons/AntDesign\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst CreateStudentForm = () => {\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [first_name, setFirst_Name] = useState(\"\");\r\n  const [last_name, setLast_Name] = useState(\"\");\r\n  const [father_name, setFather_Name] = useState(\"\");\r\n  const [father_cnic, setFather_cnic] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [emergency_contact, setEmergency_Contact] = useState(\"\");\r\n  const [address_1, setAdress_1] = useState(\"\");\r\n  const [address_2, setAdress_2] = useState(\"\");\r\n  const [roll_no, setRoll_no] = useState(\"\");\r\n  const [student_class, setStudent_class] = useState(\"\");\r\n  const [section, setSection] = useState();\r\n  const [city, setCity] = useState();\r\n  \r\n\r\n  const clearTextInput = () => {\r\n    setFirst_Name(\"\");\r\n    setLast_Name(\"\");\r\n    setFather_Name(\"\");\r\n    setFather_cnic(\"\");\r\n    setContact(\"\");\r\n    setEmergency_Contact(\"\");\r\n    setAdress_1(\"\");\r\n    setAdress_2(\"\");\r\n    setRoll_no(\"\");\r\n    setStudent_class(\"\");\r\n    setSection(\"\");\r\n    setCity(\"\");\r\n  };\r\n  const navigation = useNavigation();\r\n\r\n  const [registerStudent] = useRegisterStudentMutation();\r\n\r\n  const handleFormSubmit = async () => {\r\n    if (image, first_name, last_name, father_name, father_cnic, contact,roll_no,  emergency_contact, address_1, address_2, student_class, section ,city) {\r\n        const formData = {\r\n          image,\r\n          first_name,\r\n          last_name,\r\n          father_name,\r\n          father_cnic,\r\n          contact,\r\n          roll_no,\r\n          emergency_contact,\r\n          address_1,\r\n          address_2,\r\n          student_class,\r\n          city,\r\n          section,\r\n        };\r\n        const res = await registerStudent(formData);\r\n        if (res.data.status === \"success\") {\r\n          await storeToken(res.data.token); // Store Token in Storage\r\n          clearTextInput();\r\n          navigation.navigate(\"CreateStudentForm\");\r\n        }\r\n        if (res.data.status === \"failed\") {\r\n          Toast.show({\r\n            type: \"warning\",\r\n            position: \"top\",\r\n            topOffset: 0,\r\n            text1: res.data.message,\r\n          });\r\n        }\r\n    \r\n    } else {\r\n      Toast.show({\r\n        type: \"warning\",\r\n        position: \"top\",\r\n        topOffset: 0,\r\n        text1: \"All fields are Required\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ height: \"100%\", backgroundColor: \"#ffffff\"}}>\r\n      <View style={styleOne.buttonContainer}>\r\n        <View style={styleOne.buttonStyle}>\r\n          <TouchableOpacity onPress={pickImage}>\r\n            <Icon\r\n              style={{\r\n                marginRight: 12,\r\n                position: \"absolute\",\r\n                left: 60,\r\n                bottom: 30,\r\n                color: \"green\",\r\n              }}\r\n              name=\"pluscircle\"\r\n              color=\"#c9c9c9\"\r\n              size={14}\r\n            />\r\n            {image ? (\r\n              <Image\r\n                source={{ uri: image }}\r\n                style={{ width: 100, height: 100, borderRadius: 50 }}\r\n              />\r\n            ) : (\r\n              <Text>Add Photo</Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Toast config={toastConfig} />\r\n      </View>\r\n\r\n      <ScrollView keyboardShouldPersistTaps=\"handled\" style={{ height: '100%' }}>\r\n        <View style={{ marginLeft: 25 }}>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={first_name}\r\n              onChangeText={setFirst_Name}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Write Your First Name\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={last_name}\r\n              onChangeText={setLast_Name}\r\n              placeholder=\"Write Your Last Name\"\r\n              placeholderTextColor='gray'\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              keyboardType=\"email-address\"\r\n              value={father_name}\r\n              onChangeText={setFather_Name}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Write Your Father Name\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={father_cnic}\r\n              onChangeText={setFather_cnic}\r\n              placeholder=\"Father CNIC (XXXXX-XXXXXXX-X)\"\r\n              placeholderTextColor='gray'\r\n              keyboardType=\"phone-pad\"\r\n            />\r\n          </View>\r\n\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={contact}\r\n              onChangeText={setContact}\r\n              placeholder=\"Contact\"\r\n              placeholderTextColor='gray'\r\n              keyboardType=\"numeric\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={emergency_contact}\r\n              onChangeText={setEmergency_Contact}\r\n              placeholder=\"Emergency Contact\"\r\n              placeholderTextColor='gray'\r\n              keyboardType=\"numeric\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={address_1}\r\n              onChangeText={setAdress_1}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Address 1\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={address_2}\r\n              onChangeText={setAdress_2}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Address 2\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={roll_no}\r\n              onChangeText={setRoll_no}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Set Student Roll No.\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={student_class}\r\n              onChangeText={setStudent_class}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Student Class\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={section}\r\n              onChangeText={setSection}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Section\"\r\n            />\r\n          </View>\r\n         \r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={city}\r\n              onChangeText={setCity}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"City\"\r\n            />\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <TouchableOpacity\r\n            onPress={handleFormSubmit}\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              padding: 15,\r\n              width: \"90%\",\r\n              borderRadius: 50,\r\n              marginBottom: 10,\r\n              fontWeight: \"bold\",\r\n              backgroundColor: \"#5062BD\",\r\n              elevation: 1,\r\n              marginTop: 50,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{\r\n          alignItems: 'flex-end',\r\n          marginRight: 25\r\n        }}>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              navigation.navigate(\"AdminLogin\");\r\n            }}\r\n          >\r\n            <Text style={{ fontWeight: \"bold\", paddingBottom: 50, color: 'gray' }}>\r\n              Already Registered ? Login\r\n            </Text>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styleOne = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n    margin: 0,\r\n  },\r\n  card: {\r\n    backgroundColor: \"#ffffff\",\r\n    borderBottomRightRadius: 76,\r\n    paddingVertical: 50,\r\n    paddingHorizontal: 25,\r\n    elevation: 4,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 1,\r\n  },\r\n  buttonContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: \"600\",\r\n    marginBottom: 10,\r\n    color: \"#5062BD\",\r\n  },\r\n  cardContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  buttonStyle: {\r\n    width: 100,\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    borderRadius: 100,\r\n    borderColor: \"#5062BD\",\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 1,\r\n    borderRadius: 50,\r\n    marginTop: 20,\r\n  },\r\n\r\n  constainerStyle: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    width: \"90%\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: \"transparent\",\r\n    elevation: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"gray\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"90%\",\r\n    padding: 15,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n    borderBottomColor: \"gray\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default CreateStudentForm;"]},"metadata":{},"sourceType":"module"}