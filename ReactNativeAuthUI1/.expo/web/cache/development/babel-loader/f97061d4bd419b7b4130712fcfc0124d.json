{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Toast from 'react-native-toast-message';\nimport { styles, toastConfig } from \"../../../style\";\nimport { useSendPasswordResetEmailMutation } from \"../../../services/userAuthApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SendPasswordResetEmailScreen = function SendPasswordResetEmailScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var clearTextInput = function clearTextInput() {\n    setEmail('');\n  };\n\n  var _useSendPasswordReset = useSendPasswordResetEmailMutation(),\n      _useSendPasswordReset2 = _slicedToArray(_useSendPasswordReset, 1),\n      sendPasswordResetEmail = _useSendPasswordReset2[0];\n\n  var handleFormSubmit = function handleFormSubmit() {\n    var formdata, res;\n    return _regeneratorRuntime.async(function handleFormSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!email) {\n              _context.next = 9;\n              break;\n            }\n\n            formdata = {\n              email: email\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(sendPasswordResetEmail(formdata));\n\n          case 4:\n            res = _context.sent;\n\n            if (res.data.status === \"success\") {\n              clearTextInput();\n              Toast.show({\n                type: 'done',\n                position: 'top',\n                topOffset: 0,\n                text1: \"Password Reset Email Sent. Please Check Your Email...\"\n              });\n            }\n\n            if (res.data.status === \"failed\") {\n              clearTextInput();\n              Toast.show({\n                type: 'warning',\n                position: 'top',\n                topOffset: 0,\n                text1: res.data.message\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            Toast.show({\n              type: 'warning',\n              position: 'top',\n              topOffset: 0,\n              text1: \"Email is required\"\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Toast, {\n      config: toastConfig\n    }), _jsxs(View, {\n      style: {\n        marginHorizontal: 30,\n        marginVertical: 200\n      },\n      children: [_jsx(View, {\n        style: styles.inputWithLabel,\n        children: _jsx(TextInput, {\n          style: styleOne.input,\n          value: email,\n          onChangeText: setEmail,\n          placeholder: \"Write Your Email to Verify\",\n          placeholderTextColor: \"gray\",\n          keyboardType: \"email-address\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          onPress: handleFormSubmit,\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: 15,\n            width: \"100%\",\n            marginVertical: 5,\n            borderRadius: 50,\n            marginBottom: 80,\n            fontWeight: \"bold\",\n            backgroundColor: \"#5062BD\",\n            elevation: 4,\n            marginTop: 50\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: \"Send\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nvar styleOne = StyleSheet.create({\n  input: {\n    backgroundColor: \"transparent\",\n    width: '100%',\n    padding: 15,\n    fontSize: 14,\n    fontWeight: \"400\",\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    marginBottom: 10\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"600\",\n    marginBottom: 10,\n    color: \"#5062BD\"\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    borderBottomRightRadius: 76,\n    paddingVertical: 80,\n    paddingHorizontal: 25,\n    elevation: 4,\n    marginVertical: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    bottom: 80\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\"\n  }\n});\nexport default SendPasswordResetEmailScreen;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/auth/SendPasswordResetEmailScreen.js"],"names":["React","useState","SafeAreaView","Toast","styles","toastConfig","useSendPasswordResetEmailMutation","SendPasswordResetEmailScreen","email","setEmail","clearTextInput","sendPasswordResetEmail","handleFormSubmit","formdata","res","data","status","show","type","position","topOffset","text1","message","marginHorizontal","marginVertical","inputWithLabel","styleOne","input","justifyContent","alignItems","padding","width","borderRadius","marginBottom","fontWeight","backgroundColor","elevation","marginTop","color","StyleSheet","create","fontSize","borderBottomColor","borderBottomWidth","heading","card","borderBottomRightRadius","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","bottom","container","flex","flexDirection"],"mappings":"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","sourcesContent":["import { View, Text, Button, TextInput,StyleSheet,TouchableOpacity} from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Toast from 'react-native-toast-message';\r\nimport { styles, toastConfig } from '../../../style';\r\nimport { useSendPasswordResetEmailMutation } from '../../../services/userAuthApi';\r\n\r\nconst SendPasswordResetEmailScreen = () => {\r\n  const [email, setEmail] = useState(\"\")\r\n  const clearTextInput = () => {\r\n    setEmail('')\r\n  }\r\n  const [sendPasswordResetEmail] = useSendPasswordResetEmailMutation();\r\n\r\n  const handleFormSubmit = async () => {\r\n    if (email) {\r\n      const formdata = { email }\r\n      const res = await sendPasswordResetEmail(formdata)\r\n      if (res.data.status === \"success\") {\r\n        clearTextInput()\r\n        Toast.show({\r\n          type: 'done',\r\n          position: 'top',\r\n          topOffset: 0,\r\n          text1: \"Password Reset Email Sent. Please Check Your Email...\"\r\n        });\r\n      }\r\n      if (res.data.status === \"failed\") {\r\n        clearTextInput()\r\n        Toast.show({\r\n          type: 'warning',\r\n          position: 'top',\r\n          topOffset: 0,\r\n          text1: res.data.message\r\n        });\r\n      }\r\n    } else {\r\n      Toast.show({\r\n        type: 'warning',\r\n        position: 'top',\r\n        topOffset: 0,\r\n        text1: \"Email is required\"\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <SafeAreaView>\r\n      <Toast config={toastConfig} />\r\n\r\n\r\n      <View style={{ marginHorizontal: 30, marginVertical: 200 }}>\r\n\r\n        <View style={styles.inputWithLabel}>\r\n          <TextInput\r\n            style={styleOne.input}\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            placeholder=\"Write Your Email to Verify\"\r\n            placeholderTextColor=\"gray\"\r\n            keyboardType='email-address'\r\n          />\r\n        </View>\r\n\r\n              <View >\r\n          <TouchableOpacity\r\n                onPress={handleFormSubmit}\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  padding: 15,\r\n                  width: \"100%\",\r\n                  marginVertical: 5,\r\n                  borderRadius: 50,\r\n                  marginBottom: 80,\r\n                  fontWeight: \"bold\",\r\n                  backgroundColor: \"#5062BD\",\r\n                  elevation: 4,\r\n                  marginTop: 50,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: \"white\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                 >\r\n                  Send\r\n                </Text>\r\n              </TouchableOpacity>\r\n          </View>\r\n\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\n\r\nconst styleOne = StyleSheet.create({\r\n\r\n  input : {\r\n    backgroundColor: \"transparent\",\r\n    width: '100%',\r\n    padding: 15,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n    borderBottomColor: \"gray\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 10,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: \"600\",\r\n    marginBottom: 10,\r\n    color: \"#5062BD\",\r\n  },\r\n  card: {\r\n    \r\n    backgroundColor: \"#ffffff\",\r\n    borderBottomRightRadius: 76,\r\n    paddingVertical: 80,\r\n    paddingHorizontal: 25,\r\n    // width: '100%',\r\n    elevation: 4,\r\n    marginVertical: 10,\r\n    \r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 1,\r\n    bottom:80\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n})\r\n\r\nexport default SendPasswordResetEmailScreen"]},"metadata":{},"sourceType":"module"}