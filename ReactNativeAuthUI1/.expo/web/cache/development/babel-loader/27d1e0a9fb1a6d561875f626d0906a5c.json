{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { styles, toastConfig } from \"../../../style\";\nimport Toast from \"react-native-toast-message\";\nimport Checkbox from \"expo-checkbox\";\nimport { useRegisterUserMutation } from \"../../../services/userAuthApi\";\nimport { storeToken } from \"../../../services/AsyncStorageService\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegistrationScreen = function RegistrationScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password_confirmation = _useState10[0],\n      setPassword_confirmation = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      contact = _useState12[0],\n      setContact = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      alt_contact = _useState14[0],\n      setAlt_Contact = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      address_1 = _useState16[0],\n      setAdress_1 = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      address_2 = _useState18[0],\n      setAdress_2 = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      CNIC = _useState20[0],\n      setCNIC = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      city = _useState22[0],\n      setCity = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      image = _useState24[0],\n      setImage = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      tc = _useState26[0],\n      setTc = _useState26[1];\n\n  var clearTextInput = function clearTextInput() {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setPassword(\"\");\n    setPassword_confirmation(\"\");\n    setContact(\"\");\n    setAlt_Contact(\"\");\n    setAdress_1(\"\");\n    setAdress_2(\"\");\n    setCNIC(\"\");\n    setCity(\"\");\n    setImage(\"\");\n    setTc(false);\n  };\n\n  var navigation = useNavigation();\n\n  var _useRegisterUserMutat = useRegisterUserMutation(),\n      _useRegisterUserMutat2 = _slicedToArray(_useRegisterUserMutat, 1),\n      registerUser = _useRegisterUserMutat2[0];\n\n  var handleFormSubmit = function handleFormSubmit() {\n    var formData, res;\n    return _regeneratorRuntime.async(function handleFormSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(firstName && email && password && password_confirmation && tc)) {\n              _context.next = 17;\n              break;\n            }\n\n            if (!(password === password_confirmation)) {\n              _context.next = 14;\n              break;\n            }\n\n            formData = {\n              firstName: firstName,\n              lastName: lastName,\n              email: email,\n              password: password,\n              password_confirmation: password_confirmation,\n              contact: contact,\n              image: image,\n              alt_contact: alt_contact,\n              address_1: address_1,\n              address_2: address_2,\n              CNIC: CNIC,\n              city: city,\n              tc: tc\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(registerUser(formData));\n\n          case 5:\n            res = _context.sent;\n\n            if (!(res.data.status === \"success\")) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(storeToken(res.data.token));\n\n          case 9:\n            clearTextInput();\n            navigation.navigate(\"UserPanelTab\");\n\n          case 11:\n            if (res.data.status === \"failed\") {\n              Toast.show({\n                type: \"warning\",\n                position: \"top\",\n                topOffset: 0,\n                text1: res.data.message\n              });\n            }\n\n            _context.next = 15;\n            break;\n\n          case 14:\n            Toast.show({\n              type: \"warning\",\n              position: \"top\",\n              topOffset: 0,\n              text1: \"Password and Confirm Password doesn't match\"\n            });\n\n          case 15:\n            _context.next = 18;\n            break;\n\n          case 17:\n            Toast.show({\n              type: \"warning\",\n              position: \"top\",\n              topOffset: 0,\n              text1: \"All fields are Required\"\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      height: \"100%\",\n      backgroundColor: \"#ffffff\"\n    },\n    children: [_jsxs(View, {\n      style: styleOne.buttonContainer,\n      children: [_jsx(View, {\n        style: styleOne.buttonStyle,\n        children: _jsxs(TouchableOpacity, {\n          onPress: pickImage,\n          children: [_jsx(Icon, {\n            style: {\n              marginRight: 12,\n              position: \"absolute\",\n              left: 60,\n              bottom: 30,\n              color: \"green\"\n            },\n            name: \"pluscircle\",\n            color: \"#c9c9c9\",\n            size: 14\n          }), image ? _jsx(Image, {\n            source: {\n              uri: image\n            },\n            style: {\n              width: 100,\n              height: 100,\n              borderRadius: 50\n            }\n          }) : _jsx(Text, {\n            children: \"Add Photo\"\n          })]\n        })\n      }), _jsx(Toast, {\n        config: toastConfig\n      })]\n    }), _jsxs(ScrollView, {\n      keyboardShouldPersistTaps: \"handled\",\n      style: {\n        height: '100%'\n      },\n      children: [_jsxs(View, {\n        style: {\n          marginLeft: 25\n        },\n        children: [_jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: firstName,\n            onChangeText: setFirstName,\n            placeholder: \"Write Your First Name\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: lastName,\n            onChangeText: setLastName,\n            placeholder: \"Write Your Last Name\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail,\n            placeholderTextColor: \"gray\",\n            placeholder: \"Write Your Email\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: password,\n            onChangeText: setPassword,\n            placeholder: \"Write Your Password\",\n            secureTextEntry: true,\n            keyboardType: \"default\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: password_confirmation,\n            onChangeText: setPassword_confirmation,\n            placeholder: \"Write Your Confirm Password\",\n            secureTextEntry: true,\n            keyboardType: \"default\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: contact,\n            onChangeText: setContact,\n            placeholder: \"Contact\",\n            keyboardType: \"numeric\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: alt_contact,\n            onChangeText: setAlt_Contact,\n            placeholder: \"Emergency Contact\",\n            keyboardType: \"numeric\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: address_1,\n            onChangeText: setAdress_1,\n            placeholder: \"Address 1\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: address_2,\n            onChangeText: setAdress_2,\n            placeholder: \"Address 2\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: CNIC,\n            onChangeText: setCNIC,\n            placeholder: \"CNIC (XXXXX-XXXXXXX-X)\",\n            keyboardType: \"phone-pad\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styleOne.input,\n            value: city,\n            onChangeText: setCity,\n            placeholder: \"City\",\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Checkbox, {\n            value: tc,\n            onValueChange: setTc,\n            color: tc ? \"#5062BD\" : undefined\n          }), _jsx(Text, {\n            style: styles.labelText,\n            children: \"I agree to term and condition.\"\n          })]\n        })]\n      }), _jsx(View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: handleFormSubmit,\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: 15,\n            width: \"90%\",\n            borderRadius: 50,\n            marginBottom: 10,\n            fontWeight: \"bold\",\n            backgroundColor: \"#5062BD\",\n            elevation: 1,\n            marginTop: 50\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: \"Sign Up\"\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          alignItems: 'flex-end',\n          marginRight: 25\n        },\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            navigation.navigate(\"AdminLogin\");\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: \"bold\",\n              paddingBottom: 50,\n              color: 'gray'\n            },\n            children: \"Already Registered ? Login\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nvar styleOne = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    margin: 0\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    borderBottomRightRadius: 76,\n    paddingVertical: 50,\n    paddingHorizontal: 25,\n    elevation: 4,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1\n  },\n  buttonContainer: {\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"600\",\n    marginBottom: 10,\n    color: \"#5062BD\"\n  },\n  cardContainer: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  buttonStyle: {\n    width: 100,\n    height: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    borderRadius: 100,\n    borderColor: \"#5062BD\",\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderRadius: 50,\n    marginTop: 20\n  },\n  constainerStyle: {\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    padding: 0,\n    width: \"90%\",\n    fontWeight: \"bold\",\n    backgroundColor: \"transparent\",\n    elevation: 0,\n    borderBottomWidth: 1,\n    borderColor: \"gray\"\n  },\n  input: {\n    backgroundColor: \"transparent\",\n    width: \"90%\",\n    padding: 15,\n    fontSize: 14,\n    fontWeight: \"400\",\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    marginBottom: 10\n  }\n});\nexport default RegistrationScreen;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/auth/RegistrationScreen.js"],"names":["React","useState","useNavigation","SafeAreaView","styles","toastConfig","Toast","Checkbox","useRegisterUserMutation","storeToken","Icon","ImagePicker","RegistrationScreen","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","password_confirmation","setPassword_confirmation","contact","setContact","alt_contact","setAlt_Contact","address_1","setAdress_1","address_2","setAdress_2","CNIC","setCNIC","city","setCity","image","setImage","tc","setTc","clearTextInput","navigation","registerUser","handleFormSubmit","formData","res","data","status","token","navigate","show","type","position","topOffset","text1","message","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","height","backgroundColor","styleOne","buttonContainer","buttonStyle","marginRight","left","bottom","color","width","borderRadius","marginLeft","input","flex","flexDirection","undefined","labelText","justifyContent","alignItems","padding","marginBottom","fontWeight","elevation","marginTop","paddingBottom","StyleSheet","create","container","margin","card","borderBottomRightRadius","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","heading","fontSize","cardContainer","borderColor","borderWidth","constainerStyle","borderBottomWidth","borderBottomColor"],"mappings":";;;;;;;;;;AAUA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,MAAT,EAAiBC,WAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,uBAAT;AACA,SAASC,UAAT;AACA,OAAOC,IAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,kBAAkCX,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0Bf,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCjB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOkB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0DnB,QAAQ,CAAC,EAAD,CAAlE;AAAA;AAAA,MAAOoB,qBAAP;AAAA,MAA8BC,wBAA9B;;AACA,oBAA8BrB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOsB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAAsCvB,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOwB,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAAiCzB,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAO0B,SAAP;AAAA,MAAkBC,WAAlB;;AACA,oBAAiC3B,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAO4B,SAAP;AAAA,MAAkBC,WAAlB;;AACA,oBAAwB7B,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAO8B,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAAwB/B,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOgC,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAA0BjC,QAAQ,EAAlC;AAAA;AAAA,MAAOkC,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAoBnC,QAAQ,CAAC,KAAD,CAA5B;AAAA;AAAA,MAAOoC,EAAP;AAAA,MAAWC,KAAX;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BzB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,wBAAwB,CAAC,EAAD,CAAxB;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,KAAK,CAAC,KAAD,CAAL;AACD,GAbD;;AAcA,MAAME,UAAU,GAAGtC,aAAa,EAAhC;;AAEA,8BAAuBM,uBAAuB,EAA9C;AAAA;AAAA,MAAOiC,YAAP;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACnB7B,SAAS,IAAII,KAAb,IAAsBE,QAAtB,IAAkCE,qBAAlC,IAA2DgB,EADxC;AAAA;AAAA;AAAA;;AAAA,kBAEjBlB,QAAQ,KAAKE,qBAFI;AAAA;AAAA;AAAA;;AAGbsB,YAAAA,QAHa,GAGF;AACf9B,cAAAA,SAAS,EAATA,SADe;AAEfE,cAAAA,QAAQ,EAARA,QAFe;AAGfE,cAAAA,KAAK,EAALA,KAHe;AAIfE,cAAAA,QAAQ,EAARA,QAJe;AAKfE,cAAAA,qBAAqB,EAArBA,qBALe;AAMfE,cAAAA,OAAO,EAAPA,OANe;AAOfY,cAAAA,KAAK,EAALA,KAPe;AAQfV,cAAAA,WAAW,EAAXA,WARe;AASfE,cAAAA,SAAS,EAATA,SATe;AAUfE,cAAAA,SAAS,EAATA,SAVe;AAWfE,cAAAA,IAAI,EAAJA,IAXe;AAYfE,cAAAA,IAAI,EAAJA,IAZe;AAafI,cAAAA,EAAE,EAAFA;AAbe,aAHE;AAAA;AAAA,6CAkBDI,YAAY,CAACE,QAAD,CAlBX;;AAAA;AAkBbC,YAAAA,GAlBa;;AAAA,kBAmBfA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,SAnBL;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAoBXrC,UAAU,CAACmC,GAAG,CAACC,IAAJ,CAASE,KAAV,CApBC;;AAAA;AAqBjBR,YAAAA,cAAc;AACdC,YAAAA,UAAU,CAACQ,QAAX,CAAoB,cAApB;;AAtBiB;AAwBnB,gBAAIJ,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,QAAxB,EAAkC;AAChCxC,cAAAA,KAAK,CAAC2C,IAAN,CAAW;AACTC,gBAAAA,IAAI,EAAE,SADG;AAETC,gBAAAA,QAAQ,EAAE,KAFD;AAGTC,gBAAAA,SAAS,EAAE,CAHF;AAITC,gBAAAA,KAAK,EAAET,GAAG,CAACC,IAAJ,CAASS;AAJP,eAAX;AAMD;;AA/BkB;AAAA;;AAAA;AAiCnBhD,YAAAA,KAAK,CAAC2C,IAAN,CAAW;AACTC,cAAAA,IAAI,EAAE,SADG;AAETC,cAAAA,QAAQ,EAAE,KAFD;AAGTC,cAAAA,SAAS,EAAE,CAHF;AAITC,cAAAA,KAAK,EAAE;AAJE,aAAX;;AAjCmB;AAAA;AAAA;;AAAA;AAyCrB/C,YAAAA,KAAK,CAAC2C,IAAN,CAAW;AACTC,cAAAA,IAAI,EAAE,SADG;AAETC,cAAAA,QAAQ,EAAE,KAFD;AAGTC,cAAAA,SAAS,EAAE,CAHF;AAITC,cAAAA,KAAK,EAAE;AAJE,aAAX;;AAzCqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAkDA,MAAME,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACG5C,WAAW,CAAC6C,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAE9C,WAAW,CAAC+C,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CADH;;AAAA;AACZC,YAAAA,MADY;;AAQhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrB5B,cAAAA,QAAQ,CAAC2B,MAAM,CAACE,GAAR,CAAR;AACD;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAaA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,eAAe,EAAE;AAAnC,KAArB;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,QAAQ,CAACC,eAAtB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,QAAQ,CAACE,WAAtB;AAAA,kBACE,MAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEf,SAA3B;AAAA,qBACE,KAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLgB,cAAAA,WAAW,EAAE,EADR;AAELpB,cAAAA,QAAQ,EAAE,UAFL;AAGLqB,cAAAA,IAAI,EAAE,EAHD;AAILC,cAAAA,MAAM,EAAE,EAJH;AAKLC,cAAAA,KAAK,EAAE;AALF,aADT;AAQE,YAAA,IAAI,EAAC,YARP;AASE,YAAA,KAAK,EAAC,SATR;AAUE,YAAA,IAAI,EAAE;AAVR,YADF,EAaGvC,KAAK,GACJ,KAAC,KAAD;AACE,YAAA,MAAM,EAAE;AAAE8B,cAAAA,GAAG,EAAE9B;AAAP,aADV;AAEE,YAAA,KAAK,EAAE;AAAEwC,cAAAA,KAAK,EAAE,GAAT;AAAcT,cAAAA,MAAM,EAAE,GAAtB;AAA2BU,cAAAA,YAAY,EAAE;AAAzC;AAFT,YADI,GAMJ,KAAC,IAAD;AAAA;AAAA,YAnBJ;AAAA;AADF,QADF,EAyBE,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEvE;AAAf,QAzBF;AAAA,MADF,EA6BE,MAAC,UAAD;AAAY,MAAA,yBAAyB,EAAC,SAAtC;AAAgD,MAAA,KAAK,EAAE;AAAE6D,QAAAA,MAAM,EAAE;AAAV,OAAvD;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEW,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA,mBACE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAET,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAEjE,SAFT;AAGE,YAAA,YAAY,EAAEC,YAHhB;AAIE,YAAA,WAAW,EAAC,uBAJd;AAKE,YAAA,oBAAoB,EAAC;AALvB;AADF,UADF,EAUE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEsD,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAE/D,QAFT;AAGE,YAAA,YAAY,EAAEC,WAHhB;AAIE,YAAA,WAAW,EAAC,sBAJd;AAKE,YAAA,oBAAoB,EAAC;AALvB;AADF,UAVF,EAoBE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEoD,QAAQ,CAACU,KADlB;AAEE,YAAA,YAAY,EAAC,eAFf;AAGE,YAAA,KAAK,EAAE7D,KAHT;AAIE,YAAA,YAAY,EAAEC,QAJhB;AAKE,YAAA,oBAAoB,EAAC,MALvB;AAME,YAAA,WAAW,EAAC;AANd;AADF,UApBF,EA8BE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEkD,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAE3D,QAFT;AAGE,YAAA,YAAY,EAAEC,WAHhB;AAIE,YAAA,WAAW,EAAC,qBAJd;AAKE,YAAA,eAAe,EAAE,IALnB;AAME,YAAA,YAAY,EAAE,SANhB;AAOE,YAAA,oBAAoB,EAAC;AAPvB;AADF,UA9BF,EA0CE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEgD,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAEzD,qBAFT;AAGE,YAAA,YAAY,EAAEC,wBAHhB;AAIE,YAAA,WAAW,EAAC,6BAJd;AAKE,YAAA,eAAe,EAAE,IALnB;AAME,YAAA,YAAY,EAAE,SANhB;AAOE,YAAA,oBAAoB,EAAC;AAPvB;AADF,UA1CF,EAsDE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAE8C,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAEvD,OAFT;AAGE,YAAA,YAAY,EAAEC,UAHhB;AAIE,YAAA,WAAW,EAAC,SAJd;AAKE,YAAA,YAAY,EAAC,SALf;AAME,YAAA,oBAAoB,EAAC;AANvB;AADF,UAtDF,EAiEE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAE4C,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAErD,WAFT;AAGE,YAAA,YAAY,EAAEC,cAHhB;AAIE,YAAA,WAAW,EAAC,mBAJd;AAKE,YAAA,YAAY,EAAC,SALf;AAME,YAAA,oBAAoB,EAAC;AANvB;AADF,UAjEF,EA4EE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAE0C,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAEnD,SAFT;AAGE,YAAA,YAAY,EAAEC,WAHhB;AAIE,YAAA,WAAW,EAAC,WAJd;AAKE,YAAA,oBAAoB,EAAC;AALvB;AADF,UA5EF,EAsFE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEwC,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAEjD,SAFT;AAGE,YAAA,YAAY,EAAEC,WAHhB;AAIE,YAAA,WAAW,EAAC,WAJd;AAKE,YAAA,oBAAoB,EAAC;AALvB;AADF,UAtFF,EAgGE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEsC,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAE/C,IAFT;AAGE,YAAA,YAAY,EAAEC,OAHhB;AAIE,YAAA,WAAW,EAAC,wBAJd;AAKE,YAAA,YAAY,EAAC,WALf;AAME,YAAA,oBAAoB,EAAC;AANvB;AADF,UAhGF,EA2GE,KAAC,IAAD;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEoC,QAAQ,CAACU,KADlB;AAEE,YAAA,KAAK,EAAE7C,IAFT;AAGE,YAAA,YAAY,EAAEC,OAHhB;AAIE,YAAA,WAAW,EAAC,MAJd;AAKE,YAAA,oBAAoB,EAAC;AALvB;AADF,UA3GF,EAqHE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE6C,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,aAAa,EAAE;AAA1B,WAAb;AAAA,qBACE,KAAC,QAAD;AACE,YAAA,KAAK,EAAE3C,EADT;AAEE,YAAA,aAAa,EAAEC,KAFjB;AAGE,YAAA,KAAK,EAAED,EAAE,GAAG,SAAH,GAAe4C;AAH1B,YADF,EAME,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE7E,MAAM,CAAC8E,SAApB;AAAA;AAAA,YANF;AAAA,UArHF;AAAA,QADF,EAgIE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE,QAAlB;AAA4BC,UAAAA,UAAU,EAAE;AAAxC,SAAb;AAAA,kBACE,KAAC,gBAAD;AACE,UAAA,OAAO,EAAE1C,gBADX;AAEE,UAAA,KAAK,EAAE;AACLyC,YAAAA,cAAc,EAAE,QADX;AAELC,YAAAA,UAAU,EAAE,QAFP;AAGLC,YAAAA,OAAO,EAAE,EAHJ;AAILV,YAAAA,KAAK,EAAE,KAJF;AAKLC,YAAAA,YAAY,EAAE,EALT;AAMLU,YAAAA,YAAY,EAAE,EANT;AAOLC,YAAAA,UAAU,EAAE,MAPP;AAQLpB,YAAAA,eAAe,EAAE,SARZ;AASLqB,YAAAA,SAAS,EAAE,CATN;AAULC,YAAAA,SAAS,EAAE;AAVN,WAFT;AAAA,oBAeE,KAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLf,cAAAA,KAAK,EAAE,OADF;AAELS,cAAAA,cAAc,EAAE,QAFX;AAGLC,cAAAA,UAAU,EAAE;AAHP,aADT;AAAA;AAAA;AAfF;AADF,QAhIF,EA2JE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACXA,UAAAA,UAAU,EAAE,UADD;AAEXb,UAAAA,WAAW,EAAE;AAFF,SAAb;AAAA,kBAIE,KAAC,wBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACb/B,YAAAA,UAAU,CAACQ,QAAX,CAAoB,YAApB;AACD,WAHH;AAAA,oBAKE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEuC,cAAAA,UAAU,EAAE,MAAd;AAAsBG,cAAAA,aAAa,EAAE,EAArC;AAAyChB,cAAAA,KAAK,EAAE;AAAhD,aAAb;AAAA;AAAA;AALF;AAJF,QA3JF;AAAA,MA7BF;AAAA,IADF;AA0MD,CA1SD;;AA4SA,IAAMN,QAAQ,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AACjCC,EAAAA,SAAS,EAAE;AACTT,IAAAA,UAAU,EAAE,QADH;AAETT,IAAAA,KAAK,EAAE,MAFE;AAGTR,IAAAA,eAAe,EAAE,MAHR;AAIT2B,IAAAA,MAAM,EAAE;AAJC,GADsB;AAOjCC,EAAAA,IAAI,EAAE;AACJ5B,IAAAA,eAAe,EAAE,SADb;AAEJ6B,IAAAA,uBAAuB,EAAE,EAFrB;AAGJC,IAAAA,eAAe,EAAE,EAHb;AAIJC,IAAAA,iBAAiB,EAAE,EAJf;AAKJV,IAAAA,SAAS,EAAE,CALP;AAMJW,IAAAA,WAAW,EAAE,MANT;AAOJC,IAAAA,YAAY,EAAE;AAAEzB,MAAAA,KAAK,EAAE,CAAT;AAAYT,MAAAA,MAAM,EAAE;AAApB,KAPV;AAQJmC,IAAAA,aAAa,EAAE,GARX;AASJC,IAAAA,YAAY,EAAE;AATV,GAP2B;AAkBjCjC,EAAAA,eAAe,EAAE;AACfe,IAAAA,UAAU,EAAE,QADG;AAEfE,IAAAA,YAAY,EAAE;AAFC,GAlBgB;AAsBjCiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,EADH;AAEPjB,IAAAA,UAAU,EAAE,KAFL;AAGPD,IAAAA,YAAY,EAAE,EAHP;AAIPZ,IAAAA,KAAK,EAAE;AAJA,GAtBwB;AA4BjC+B,EAAAA,aAAa,EAAE;AACb1B,IAAAA,IAAI,EAAE,CADO;AAEbZ,IAAAA,eAAe,EAAE;AAFJ,GA5BkB;AAgCjCG,EAAAA,WAAW,EAAE;AACXK,IAAAA,KAAK,EAAE,GADI;AAEXT,IAAAA,MAAM,EAAE,GAFG;AAGXiB,IAAAA,cAAc,EAAE,QAHL;AAIXC,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,OAAO,EAAE,EALE;AAMXT,IAAAA,YAAY,EAAE,GANH;AAOX8B,IAAAA,WAAW,EAAE,SAPF;AAQXvC,IAAAA,eAAe,EAAE,MARN;AASXwC,IAAAA,WAAW,EAAE,CATF;AAUX/B,IAAAA,YAAY,EAAE,EAVH;AAWXa,IAAAA,SAAS,EAAE;AAXA,GAhCoB;AA8CjCmB,EAAAA,eAAe,EAAE;AACfzB,IAAAA,cAAc,EAAE,YADD;AAEfC,IAAAA,UAAU,EAAE,QAFG;AAGfC,IAAAA,OAAO,EAAE,CAHM;AAIfV,IAAAA,KAAK,EAAE,KAJQ;AAKfY,IAAAA,UAAU,EAAE,MALG;AAMfpB,IAAAA,eAAe,EAAE,aANF;AAOfqB,IAAAA,SAAS,EAAE,CAPI;AAQfqB,IAAAA,iBAAiB,EAAE,CARJ;AASfH,IAAAA,WAAW,EAAE;AATE,GA9CgB;AAyDjC5B,EAAAA,KAAK,EAAE;AACLX,IAAAA,eAAe,EAAE,aADZ;AAELQ,IAAAA,KAAK,EAAE,KAFF;AAGLU,IAAAA,OAAO,EAAE,EAHJ;AAILmB,IAAAA,QAAQ,EAAE,EAJL;AAKLjB,IAAAA,UAAU,EAAE,KALP;AAMLuB,IAAAA,iBAAiB,EAAE,MANd;AAOLD,IAAAA,iBAAiB,EAAE,CAPd;AAQLvB,IAAAA,YAAY,EAAE;AART;AAzD0B,CAAlB,CAAjB;AAqEA,eAAe1E,kBAAf","sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { styles, toastConfig } from \"../../../style\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport Checkbox from \"expo-checkbox\";\r\nimport { useRegisterUserMutation } from \"../../../services/userAuthApi\";\r\nimport { storeToken } from \"../../../services/AsyncStorageService\";\r\nimport Icon from \"react-native-vector-icons/AntDesign\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst RegistrationScreen = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password_confirmation, setPassword_confirmation] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [alt_contact, setAlt_Contact] = useState(\"\");\r\n  const [address_1, setAdress_1] = useState(\"\");\r\n  const [address_2, setAdress_2] = useState(\"\");\r\n  const [CNIC, setCNIC] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [image, setImage] = useState();\r\n  const [tc, setTc] = useState(false);\r\n\r\n  const clearTextInput = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setPassword(\"\");\r\n    setPassword_confirmation(\"\");\r\n    setContact(\"\");\r\n    setAlt_Contact(\"\");\r\n    setAdress_1(\"\");\r\n    setAdress_2(\"\");\r\n    setCNIC(\"\");\r\n    setCity(\"\");\r\n    setImage(\"\");\r\n    setTc(false);\r\n  };\r\n  const navigation = useNavigation();\r\n\r\n  const [registerUser] = useRegisterUserMutation();\r\n\r\n  const handleFormSubmit = async () => {\r\n    if (firstName && email && password && password_confirmation && tc) {\r\n      if (password === password_confirmation) {\r\n        const formData = {\r\n          firstName,\r\n          lastName,\r\n          email,\r\n          password,\r\n          password_confirmation,\r\n          contact,\r\n          image,\r\n          alt_contact,\r\n          address_1,\r\n          address_2,\r\n          CNIC,\r\n          city,\r\n          tc,\r\n        };\r\n        const res = await registerUser(formData);\r\n        if (res.data.status === \"success\") {\r\n          await storeToken(res.data.token); // Store Token in Storage\r\n          clearTextInput();\r\n          navigation.navigate(\"UserPanelTab\");\r\n        }\r\n        if (res.data.status === \"failed\") {\r\n          Toast.show({\r\n            type: \"warning\",\r\n            position: \"top\",\r\n            topOffset: 0,\r\n            text1: res.data.message,\r\n          });\r\n        }\r\n      } else {\r\n        Toast.show({\r\n          type: \"warning\",\r\n          position: \"top\",\r\n          topOffset: 0,\r\n          text1: \"Password and Confirm Password doesn't match\",\r\n        });\r\n      }\r\n    } else {\r\n      Toast.show({\r\n        type: \"warning\",\r\n        position: \"top\",\r\n        topOffset: 0,\r\n        text1: \"All fields are Required\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ height: \"100%\", backgroundColor: \"#ffffff\"}}>\r\n      <View style={styleOne.buttonContainer}>\r\n        <View style={styleOne.buttonStyle}>\r\n          <TouchableOpacity onPress={pickImage}>\r\n            <Icon\r\n              style={{\r\n                marginRight: 12,\r\n                position: \"absolute\",\r\n                left: 60,\r\n                bottom: 30,\r\n                color: \"green\",\r\n              }}\r\n              name=\"pluscircle\"\r\n              color=\"#c9c9c9\"\r\n              size={14}\r\n            />\r\n            {image ? (\r\n              <Image\r\n                source={{ uri: image }}\r\n                style={{ width: 100, height: 100, borderRadius: 50 }}\r\n              />\r\n            ) : (\r\n              <Text>Add Photo</Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Toast config={toastConfig} />\r\n      </View>\r\n\r\n      <ScrollView keyboardShouldPersistTaps=\"handled\" style={{ height: '100%' }}>\r\n        <View style={{ marginLeft: 25 }}>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={firstName}\r\n              onChangeText={setFirstName}\r\n              placeholder=\"Write Your First Name\"\r\n              placeholderTextColor='gray'\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={lastName}\r\n              onChangeText={setLastName}\r\n              placeholder=\"Write Your Last Name\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              keyboardType=\"email-address\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n              placeholderTextColor='gray'\r\n              placeholder=\"Write Your Email\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              placeholder=\"Write Your Password\"\r\n              secureTextEntry={true}\r\n              keyboardType={\"default\"}\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={password_confirmation}\r\n              onChangeText={setPassword_confirmation}\r\n              placeholder=\"Write Your Confirm Password\"\r\n              secureTextEntry={true}\r\n              keyboardType={\"default\"}\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={contact}\r\n              onChangeText={setContact}\r\n              placeholder=\"Contact\"\r\n              keyboardType=\"numeric\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={alt_contact}\r\n              onChangeText={setAlt_Contact}\r\n              placeholder=\"Emergency Contact\"\r\n              keyboardType=\"numeric\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={address_1}\r\n              onChangeText={setAdress_1}\r\n              placeholder=\"Address 1\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={address_2}\r\n              onChangeText={setAdress_2}\r\n              placeholder=\"Address 2\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={CNIC}\r\n              onChangeText={setCNIC}\r\n              placeholder=\"CNIC (XXXXX-XXXXXXX-X)\"\r\n              keyboardType=\"phone-pad\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              style={styleOne.input}\r\n              value={city}\r\n              onChangeText={setCity}\r\n              placeholder=\"City\"\r\n              placeholderTextColor='gray'\r\n\r\n            />\r\n          </View>\r\n          <View style={{ flex: 1, flexDirection: \"row\" }}>\r\n            <Checkbox\r\n              value={tc}\r\n              onValueChange={setTc}\r\n              color={tc ? \"#5062BD\" : undefined}\r\n            />\r\n            <Text style={styles.labelText}>I agree to term and condition.</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <TouchableOpacity\r\n            onPress={handleFormSubmit}\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              padding: 15,\r\n              width: \"90%\",\r\n              borderRadius: 50,\r\n              marginBottom: 10,\r\n              fontWeight: \"bold\",\r\n              backgroundColor: \"#5062BD\",\r\n              elevation: 1,\r\n              marginTop: 50,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{\r\n          alignItems: 'flex-end',\r\n          marginRight: 25\r\n        }}>\r\n          <TouchableWithoutFeedback\r\n            onPress={() => {\r\n              navigation.navigate(\"AdminLogin\");\r\n            }}\r\n          >\r\n            <Text style={{ fontWeight: \"bold\", paddingBottom: 50, color: 'gray' }}>\r\n              Already Registered ? Login\r\n            </Text>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styleOne = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n    margin: 0,\r\n  },\r\n  card: {\r\n    backgroundColor: \"#ffffff\",\r\n    borderBottomRightRadius: 76,\r\n    paddingVertical: 50,\r\n    paddingHorizontal: 25,\r\n    elevation: 4,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 1,\r\n  },\r\n  buttonContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: \"600\",\r\n    marginBottom: 10,\r\n    color: \"#5062BD\",\r\n  },\r\n  cardContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  buttonStyle: {\r\n    width: 100,\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    borderRadius: 100,\r\n    borderColor: \"#5062BD\",\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 1,\r\n    borderRadius: 50,\r\n    marginTop: 20,\r\n  },\r\n\r\n  constainerStyle: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    width: \"90%\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: \"transparent\",\r\n    elevation: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"gray\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"90%\",\r\n    padding: 15,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n    borderBottomColor: \"gray\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default RegistrationScreen;\r\n"]},"metadata":{},"sourceType":"module"}