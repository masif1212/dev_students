{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useEffect } from 'react';\nimport { DrawerContentScrollView, DrawerItem, DrawerItemList } from \"@react-navigation/drawer\";\nimport { useNavigation } from '@react-navigation/native';\nimport { removeToken } from \"../../../services/AsyncStorageService.js\";\nimport { useSelector } from 'react-redux';\nimport { unSetSchoolAdminInfo } from \"../../../features/schoolAdminSlice.js\";\nimport { unsetUserToken } from \"../../../features/authSlice.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SideBar = function SideBar(_ref) {\n  var props = _extends({}, _ref);\n\n  var handleLogout = function handleLogout() {\n    return _regeneratorRuntime.async(function handleLogout$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            unSetSchoolAdminInfo({\n              email: \"\",\n              first_name: \"\",\n              last_name: \"\",\n              image: ''\n            });\n            unsetUserToken({\n              token: null\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(removeToken('token'));\n\n          case 4:\n            navigation.navigate('Home');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var navigation = useNavigation();\n  var myData = useSelector(function (state) {\n    return state.schoolAdmin;\n  });\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsxs(View, {\n      style: {\n        margin: 15\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 18,\n          marginBottom: 5,\n          fontWeight: 'bold'\n        },\n        children: myData.first_name\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          marginBottom: 5\n        },\n        children: myData.email\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          marginBottom: 5\n        },\n        children: myData.last_name\n      })]\n    }), _jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Logout\",\n      onPress: handleLogout\n    })]\n  }));\n};\n\nexport default SideBar;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/schoolAdminProfile/SideBar.js"],"names":["React","useEffect","DrawerContentScrollView","DrawerItem","DrawerItemList","useNavigation","removeToken","useSelector","unSetSchoolAdminInfo","unsetUserToken","SideBar","props","handleLogout","email","first_name","last_name","image","token","navigation","navigate","myData","state","schoolAdmin","margin","fontSize","marginBottom","fontWeight"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,uBAAT,EAAkCC,UAAlC,EAA8CC,cAA9C,QAAoE,0BAApE;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,oBAAT;AACA,SAASC,cAAT;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAZC,KAAY;;AAEhC,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AACnBJ,YAAAA,oBAAoB,CAAC;AAAEK,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,UAAU,EAAE,EAAzB;AAA6BC,cAAAA,SAAS,EAAE,EAAxC;AAA4CC,cAAAA,KAAK,EAAE;AAAnD,aAAD,CAApB;AACAP,YAAAA,cAAc,CAAC;AAAEQ,cAAAA,KAAK,EAAE;AAAT,aAAD,CAAd;AAFmB;AAAA,6CAGbX,WAAW,CAAC,OAAD,CAHE;;AAAA;AAInBY,YAAAA,UAAU,CAACC,QAAX,CAAoB,MAApB;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAOA,MAAMD,UAAU,GAAGb,aAAa,EAAhC;AAEA,MAAMe,MAAM,GAAGb,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GAAN,CAA1B;AAIA,SACE,MAAC,uBAAD,kCAA6BX,KAA7B;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA,iBAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,YAAY,EAAE,CAA9B;AAAiCC,UAAAA,UAAU,EAAE;AAA7C,SAAb;AAAA,kBAAqEN,MAAM,CAACN;AAA5E,QAFF,EAGE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEU,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,YAAY,EAAE;AAA9B,SAAb;AAAA,kBAAiDL,MAAM,CAACP;AAAxD,QAHF,EAIE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEW,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,YAAY,EAAE;AAA9B,SAAb;AAAA,kBAAiDL,MAAM,CAACL;AAAxD,QAJF;AAAA,MADF,EAOE,KAAC,cAAD,oBAAoBJ,KAApB,EAPF,EAQE,KAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEC;AAApC,MARF;AAAA,KADF;AAYD,CA3BD;;AA6BA,eAAeF,OAAf","sourcesContent":["import { View, Text, Image } from 'react-native';\r\nimport React, { useEffect } from 'react';\r\nimport { DrawerContentScrollView, DrawerItem, DrawerItemList } from \"@react-navigation/drawer\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { removeToken } from '../../../services/AsyncStorageService.js';\r\nimport { useSelector } from 'react-redux';\r\nimport { unSetSchoolAdminInfo } from '../../../features/schoolAdminSlice.js';\r\nimport { unsetUserToken } from '../../../features/authSlice.js';\r\n\r\n\r\nconst SideBar = ({ ...props }) => {\r\n\r\n  const handleLogout = async () => {\r\n    unSetSchoolAdminInfo({ email: \"\", first_name: \"\", last_name: \"\", image: '' })\r\n    unsetUserToken({ token: null })\r\n    await removeToken('token')\r\n    navigation.navigate('Home');\r\n  }\r\n\r\n  const navigation = useNavigation()\r\n  // Getting User Data from Redux Store\r\n  const myData = useSelector(state => state.schoolAdmin)\r\n  // const myToken = useSelector(state => state.auth)\r\n  // console.log(myToken)\r\n\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View style={{ margin: 15 }}>\r\n     \r\n        <Text style={{ fontSize: 18, marginBottom: 5, fontWeight: 'bold' }}>{myData.first_name}</Text>\r\n        <Text style={{ fontSize: 16, marginBottom: 5 }}>{myData.email}</Text>\r\n        <Text style={{ fontSize: 16, marginBottom: 5 }}>{myData.last_name}</Text>\r\n      </View>\r\n      <DrawerItemList {...props} />\r\n      <DrawerItem label='Logout' onPress={handleLogout} />\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nexport default SideBar"]},"metadata":{},"sourceType":"module"}