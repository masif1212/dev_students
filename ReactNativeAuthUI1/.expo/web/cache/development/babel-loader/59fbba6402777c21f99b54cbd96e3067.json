{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport { getToken } from \"../../services/AsyncStorageService\";\nimport { useGetLoggedUserQuery } from \"../../services/userAuthApi\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserInfo } from \"../../features/userSlice\";\nimport { setUserToken } from \"../../features/authSlice\";\nimport CustomCard from \"../Components/customCard/CustomCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DashboardScreen = function DashboardScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userLToken = _useState2[0],\n      setUserLToken = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getToken());\n\n            case 2:\n              token = _context.sent;\n              setUserLToken(token);\n              dispatch(setUserToken({\n                token: token\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n\n  var _useGetLoggedUserQuer = useGetLoggedUserQuery(userLToken),\n      data = _useGetLoggedUserQuer.data,\n      isSuccess = _useGetLoggedUserQuer.isSuccess;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (isSuccess) {\n      dispatch(setUserInfo({\n        email: data.user.email,\n        firstName: data.user.firstName,\n        lastName: data.user.lastName\n      }));\n    }\n  });\n  return _jsxs(View, {\n    children: [_jsx(CustomCard, {\n      backgroundColor: \"#5062BD\",\n      title: \"Teacher Attendance\",\n      color: \"white\"\n    }), _jsx(CustomCard, {\n      backgroundColor: \"#ffffff\",\n      title: \"Student Attendance\"\n    })]\n  });\n};\n\nexport default DashboardScreen;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/DashboardScreen.js"],"names":["React","useEffect","useState","getToken","useGetLoggedUserQuery","useDispatch","setUserInfo","setUserToken","CustomCard","DashboardScreen","userLToken","setUserLToken","token","dispatch","data","isSuccess","email","user","firstName","lastName"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT;AACA,SAASC,qBAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,UAAP;;;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,kBAAoCP,QAAQ,EAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBE,QAAQ,EAD7B;;AAAA;AACOS,cAAAA,KADP;AAECD,cAAAA,aAAa,CAACC,KAAD,CAAb;AACAC,cAAAA,QAAQ,CAACN,YAAY,CAAC;AAAEK,gBAAAA,KAAK,EAAEA;AAAT,eAAD,CAAb,CAAR;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKD,GANQ,CAAT;;AAQA,8BAA4BR,qBAAqB,CAACM,UAAD,CAAjD;AAAA,MAAQI,IAAR,yBAAQA,IAAR;AAAA,MAAcC,SAAd,yBAAcA,SAAd;;AAGA,MAAMF,QAAQ,GAAGR,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,SAAJ,EAAe;AACbF,MAAAA,QAAQ,CACNP,WAAW,CAAC;AACVU,QAAAA,KAAK,EAAEF,IAAI,CAACG,IAAL,CAAUD,KADP;AAEVE,QAAAA,SAAS,EAAEJ,IAAI,CAACG,IAAL,CAAUC,SAFX;AAGVC,QAAAA,QAAQ,EAAEL,IAAI,CAACG,IAAL,CAAUE;AAHV,OAAD,CADL,CAAR;AAOD;AACF,GAVQ,CAAT;AAYA,SACE,MAAC,IAAD;AAAA,eAEE,KAAC,UAAD;AACE,MAAA,eAAe,EAAC,SADlB;AAEE,MAAA,KAAK,EAAC,oBAFR;AAGE,MAAA,KAAK,EAAC;AAHR,MAFF,EAQE,KAAC,UAAD;AAAY,MAAA,eAAe,EAAC,SAA5B;AAAsC,MAAA,KAAK,EAAC;AAA5C,MARF;AAAA,IADF;AAcD,CAzCD;;AA2CA,eAAeV,eAAf","sourcesContent":["import { View} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getToken } from \"../../services/AsyncStorageService\";\r\nimport { useGetLoggedUserQuery } from \"../../services/userAuthApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserInfo } from \"../../features/userSlice\";\r\nimport { setUserToken } from \"../../features/authSlice\";\r\nimport CustomCard from \"../Components/customCard/CustomCard\";\r\n\r\n\r\nconst DashboardScreen = () => {\r\n  const [userLToken, setUserLToken] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const token = await getToken(); // Getting Token from Storage\r\n      setUserLToken(token); // Store Token in Local State\r\n      dispatch(setUserToken({ token: token })); // Store Token in Redux Store\r\n    })();\r\n  });\r\n\r\n  const { data, isSuccess } = useGetLoggedUserQuery(userLToken);\r\n\r\n  // Store User Data in Redux Store\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(\r\n        setUserInfo({\r\n          email: data.user.email,\r\n          firstName: data.user.firstName,\r\n          lastName: data.user.lastName,\r\n        })\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      {/* <Text>{userLToken}</Text> */}\r\n      <CustomCard\r\n        backgroundColor=\"#5062BD\"\r\n        title=\"Teacher Attendance\"\r\n        color=\"white\"\r\n      />\r\n\r\n      <CustomCard backgroundColor=\"#ffffff\" title=\"Student Attendance\" />\r\n\r\n   \r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n"]},"metadata":{},"sourceType":"module"}