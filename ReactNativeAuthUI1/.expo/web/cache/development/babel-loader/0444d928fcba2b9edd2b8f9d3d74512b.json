{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"./HomeScreen\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport { getToken } from \"../../../services/AsyncStorageService\";\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\n\nvar ShopTab = function ShopTab() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userLToken = _useState2[0],\n      setUserLToken = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    (function _callee() {\n      var token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getToken());\n\n            case 2:\n              token = _context.sent;\n              setUserLToken(token);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n\n  var handleUserAuth = function handleUserAuth() {\n    if (userLToken) {\n      navigation.navigate('UserPanelTab', {\n        screen: 'Dashboard'\n      });\n    } else {\n      navigation.navigate('UserLogin');\n    }\n  };\n\n  return _jsx(Drawer.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: 'purple'\n      },\n      headerTintColor: 'white',\n      drawerStyle: {\n        backgroundColor: '#F0EDED'\n      }\n    },\n    children: _jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerTitle: 'Geek-Shop',\n        drawerActiveTintColor: 'black',\n        headerRight: function headerRight() {\n          return _jsx(TouchableWithoutFeedback, {\n            onPress: handleUserAuth,\n            children: userLToken ? _jsx(Text, {\n              style: {\n                color: 'white',\n                fontSize: 18,\n                paddingRight: 20,\n                fontWeight: 'bold'\n              },\n              children: \"Dashboard\"\n            }) : _jsx(Text, {\n              style: {\n                color: 'white',\n                fontSize: 18,\n                paddingRight: 20,\n                fontWeight: 'bold'\n              },\n              children: \"Login\"\n            })\n          });\n        }\n      }\n    })\n  });\n};\n\nexport default ShopTab;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/shop/ShopTab.js"],"names":["createDrawerNavigator","HomeScreen","TouchableWithoutFeedback","useNavigation","getToken","useEffect","useState","Drawer","ShopTab","userLToken","setUserLToken","navigation","token","handleUserAuth","navigate","screen","headerStyle","backgroundColor","headerTintColor","drawerStyle","headerTitle","drawerActiveTintColor","headerRight","color","fontSize","paddingRight","fontWeight"],"mappings":";;;;AACA,SAASA,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,UAAP;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,IAAMC,MAAM,GAAGP,qBAAqB,EAApC;;AACA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAAoCF,QAAQ,EAA5C;AAAA;AAAA,MAAOG,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;AACAE,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBD,QAAQ,EAD7B;;AAAA;AACOQ,cAAAA,KADP;AAECF,cAAAA,aAAa,CAACE,KAAD,CAAb;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,CAAT;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIJ,UAAJ,EAAgB;AACdE,MAAAA,UAAU,CAACG,QAAX,CAAoB,cAApB,EAAoC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAApC;AACD,KAFD,MAEO;AACLJ,MAAAA,UAAU,CAACG,QAAX,CAAoB,WAApB;AACD;AACF,GAND;;AAQA,SACE,KAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,aAAa,EAAE;AAAEE,MAAAA,WAAW,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAf;AAA8CC,MAAAA,eAAe,EAAE,OAA/D;AAAwEC,MAAAA,WAAW,EAAE;AAAEF,QAAAA,eAAe,EAAE;AAAnB;AAArF,KAAjC;AAAA,cAEE,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,SAAS,EAAEhB,UAAtC;AAAkD,MAAA,OAAO,EAAE;AACzDmB,QAAAA,WAAW,EAAE,WAD4C;AAC/BC,QAAAA,qBAAqB,EAAE,OADQ;AACCC,QAAAA,WAAW,EAAE;AAAA,iBAAM,KAAC,wBAAD;AAA0B,YAAA,OAAO,EAAET,cAAnC;AAAA,sBAC1EJ,UAAU,GAAG,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEc,gBAAAA,KAAK,EAAE,OAAT;AAAkBC,gBAAAA,QAAQ,EAAE,EAA5B;AAAgCC,gBAAAA,YAAY,EAAE,EAA9C;AAAkDC,gBAAAA,UAAU,EAAE;AAA9D,eAAb;AAAA;AAAA,cAAH,GAA2G,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEH,gBAAAA,KAAK,EAAE,OAAT;AAAkBC,gBAAAA,QAAQ,EAAE,EAA5B;AAAgCC,gBAAAA,YAAY,EAAE,EAA9C;AAAkDC,gBAAAA,UAAU,EAAE;AAA9D,eAAb;AAAA;AAAA;AAD3C,YAAN;AAAA;AADd;AAA3D;AAFF,IADF;AAYD,CA7BD;;AA+BA,eAAelB,OAAf","sourcesContent":["import { View, Text } from 'react-native'\r\nimport { createDrawerNavigator } from '@react-navigation/drawer'\r\nimport HomeScreen from './HomeScreen';\r\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { getToken } from '../../../services/AsyncStorageService';\r\nimport { useEffect, useState } from 'react';\r\nconst Drawer = createDrawerNavigator();\r\nconst ShopTab = () => {\r\n  const [userLToken, setUserLToken] = useState()\r\n  const navigation = useNavigation()\r\n  useEffect(() => {\r\n    (async () => {\r\n      const token = await getToken() // Getting Token from Storage\r\n      setUserLToken(token)          // Store Token in Local State\r\n    })();\r\n  })\r\n  const handleUserAuth = () => {\r\n    if (userLToken) {\r\n      navigation.navigate('UserPanelTab', { screen: 'Dashboard' })\r\n    } else {\r\n      navigation.navigate('UserLogin')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Drawer.Navigator screenOptions={{ headerStyle: { backgroundColor: 'purple' }, headerTintColor: 'white', drawerStyle: { backgroundColor: '#F0EDED' } }}>\r\n\r\n      <Drawer.Screen name=\"Home\" component={HomeScreen} options={{\r\n        headerTitle: 'Geek-Shop', drawerActiveTintColor: 'black', headerRight: () => <TouchableWithoutFeedback onPress={handleUserAuth}>\r\n          {userLToken ? <Text style={{ color: 'white', fontSize: 18, paddingRight: 20, fontWeight: 'bold' }}>Dashboard</Text> : <Text style={{ color: 'white', fontSize: 18, paddingRight: 20, fontWeight: 'bold' }}>Login</Text>}\r\n\r\n        </TouchableWithoutFeedback>\r\n      }} />\r\n\r\n    </Drawer.Navigator>\r\n  )\r\n}\r\n\r\nexport default ShopTab"]},"metadata":{},"sourceType":"module"}