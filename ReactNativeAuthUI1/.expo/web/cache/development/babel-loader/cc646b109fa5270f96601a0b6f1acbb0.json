{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport _ from \"lodash\";\nimport ClassSectionFilter from \"../singleStudentAttendance/ClassSectionFilter\";\nimport { CheckBox } from 'react-native-elements';\nimport { useGetStudentQuery } from \"../../../services/userAuthApi\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\n\nvar MarkAttendanceScreen = function MarkAttendanceScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([\"RollNo\", \"Name\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      columns = _useState2[0],\n      setColumns = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      direction = _useState4[0],\n      setDirection = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedColumn = _useState6[0],\n      setSelectedColumn = _useState6[1];\n\n  var _useGetStudentQuery = useGetStudentQuery(),\n      data = _useGetStudentQuery.data;\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      students = _useState8[0],\n      setStudents = _useState8[1];\n\n  useEffect(function () {\n    setStudents(data);\n  }, [students]);\n  var myData = useSelector(function (state) {\n    return state.student;\n  });\n\n  var MarkAttendance = function MarkAttendance(item, S) {\n    var attend = students.map(function (l) {\n      return l._id === item._id ? _objectSpread(_objectSpread({}, l), {}, {\n        attendance: S\n      }) : l;\n    });\n    console.log(attend);\n  };\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      items = _useState10[0],\n      setItems = _useState10[1];\n\n  var sortTable = function sortTable(column) {\n    var newDirection = direction === \"desc\" ? \"asc\" : \"desc\";\n\n    var sortedData = _.orderBy(students, [column], [newDirection]);\n\n    setSelectedColumn(column);\n    setDirection(newDirection);\n    setStudents(sortedData);\n  };\n\n  var tableHeader = function tableHeader() {\n    return _jsx(View, {\n      style: styles.tableHeader,\n      children: columns.map(function (column, index) {\n        {\n          return _jsx(TouchableOpacity, {\n            style: styles.columnHeader,\n            onPress: function onPress() {\n              return sortTable(column);\n            },\n            children: _jsxs(Text, {\n              style: styles.columnHeaderTxt,\n              children: [column + \"\", selectedColumn === column && _jsx(MaterialCommunityIcons, {\n                name: direction === \"desc\" ? \"arrow-down-drop-circle\" : \"arrow-up-drop-circle\"\n              })]\n            })\n          }, index);\n        }\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      height: windowHeight,\n      width: '100%'\n    },\n    children: [_jsx(View, {\n      children: _jsx(ClassSectionFilter, {})\n    }), _jsx(FlatList, {\n      data: students,\n      keyExtractor: function keyExtractor(item, index) {\n        return index + \"\";\n      },\n      style: {\n        maxWidth: '100%'\n      },\n      ListHeaderComponent: tableHeader,\n      stickyHeaderIndices: [0],\n      extraData: students,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        console.log(item);\n        return _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.tableRow), {}, {\n            backgroundColor: index % 2 == 1 ? \"#F0FBFC\" : \"white\",\n            width: '100%'\n          }),\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.columnRowTxt), {}, {\n              fontWeight: \"bold\"\n            }),\n            children: item == null ? void 0 : item.roll_no\n          }), _jsx(Text, {\n            style: _objectSpread({}, styles.columnRowTxt),\n            children: item.first_name\n          }), _jsx(ScrollView, {\n            horizontal: true,\n            showsHorizontalScrollIndicator: true,\n            pagingEnabled: true,\n            style: {\n              width: '150%'\n            },\n            children: _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                left: 40\n              },\n              children: [_jsx(View, {\n                style: {\n                  left: 23\n                },\n                children: _jsx(CheckBox, {\n                  title: \"P\",\n                  checkedColor: \"green\",\n                  checked: item.attendance === 'P' ? true : false,\n                  checkedIcon: \"dot-circle-o\",\n                  unCheckedIcon: \"circle-o\",\n                  onPress: function onPress() {\n                    return MarkAttendance(item, 'P');\n                  },\n                  containerStyle: {\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: 50,\n                    right: 50,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: -10,\n                    backgroundColor: 'transparent'\n                  }\n                })\n              }), _jsx(View, {\n                style: {\n                  left: 5\n                },\n                children: _jsx(CheckBox, {\n                  title: \"A\",\n                  checkedColor: \"red\",\n                  checked: item.attendanc == 'a' ? true : false,\n                  checkedIcon: \"dot-circle-o\",\n                  unCheckedIcon: \"circle-o\",\n                  onPress: function onPress() {\n                    return MarkAttendance(index, 'a');\n                  },\n                  containerStyle: {\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: 50,\n                    right: 50,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: -10,\n                    backgroundColor: 'transparent'\n                  }\n                })\n              }), _jsx(View, {\n                style: {\n                  left: 5\n                },\n                children: _jsx(CheckBox, {\n                  title: \"L\",\n                  checkedColor: \"gray\",\n                  checked: item.attendanc == 'l' ? true : false,\n                  checkedIcon: \"dot-circle-o\",\n                  unCheckedIcon: \"circle-o\",\n                  onPress: function onPress() {\n                    return MarkAttendance(index, 'l');\n                  },\n                  containerStyle: {\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: 50,\n                    right: 70,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: -10,\n                    backgroundColor: 'transparent'\n                  }\n                })\n              })]\n            })\n          })]\n        });\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  tableHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#5062BD\",\n    borderTopEndRadius: 10,\n    borderTopStartRadius: 10,\n    height: 50\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    height: 40,\n    margin: 2,\n    left: 8\n  },\n  columnHeader: {\n    width: \"16%\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    margin: 10\n  },\n  columnHeaderTxt: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  columnRowTxt: {\n    width: \"18%\"\n  }\n});\nexport default MarkAttendanceScreen;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/Teachers/MarkAttendanceScreen.js"],"names":["StatusBar","React","useState","useEffect","MaterialCommunityIcons","_","ClassSectionFilter","CheckBox","useGetStudentQuery","useSelector","windowWidth","Dimensions","get","width","windowHeight","height","MarkAttendanceScreen","navigation","columns","setColumns","direction","setDirection","selectedColumn","setSelectedColumn","data","students","setStudents","myData","state","student","MarkAttendance","item","S","attend","map","l","_id","attendance","console","log","items","setItems","sortTable","column","newDirection","sortedData","orderBy","tableHeader","styles","index","columnHeader","columnHeaderTxt","maxWidth","tableRow","backgroundColor","columnRowTxt","fontWeight","roll_no","first_name","flexDirection","left","alignItems","justifyContent","right","top","attendanc","StyleSheet","create","borderTopEndRadius","borderTopStartRadius","margin","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity, ScrollView,Dimensions  } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport _ from \"lodash\"\r\nimport ClassSectionFilter from '../singleStudentAttendance/ClassSectionFilter';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { useGetStudentQuery } from '../../../services/userAuthApi';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst MarkAttendanceScreen = ({ navigation }) => {\r\n  const [columns, setColumns] = useState([\r\n    \"RollNo\",\r\n    \"Name\",\r\n  ])\r\n  \r\n  const [direction, setDirection] = useState('')\r\n  const [selectedColumn, setSelectedColumn] = useState('')\r\n  \r\n  const {data} = useGetStudentQuery();\r\n\r\n\r\n  const [students,setStudents] =useState([])\r\n\r\nuseEffect(() => {\r\n  setStudents(data);\r\n}, [students])\r\n  \r\n \r\n\r\n  const myData = useSelector(state => state.student)\r\n\r\n\r\n\r\n  const MarkAttendance=(item,S)=>{\r\n    const attend = (students.map(l => l._id===item._id ? {...l,  attendance: S} : l));\r\n    console.log(attend)\r\n    // console.log(item)\r\n\r\n\r\n    // console.log(students)\r\n\r\n\r\n\r\n    // const MarkAttendance=(item,S)=>{\r\n    //   let std=students\r\n    //   std[item].attendance = S\r\n    //   let newArr = [...std]; // copying the old datas array\r\n    //   newArr[item].attendance = S; \r\n    //    let any = std[item]\r\n    //  setStudents(any)\r\n    //  console.log(students)\r\n    // //  onSubmit(any);\r\n     \r\n }\r\n\r\nconst [ items , setItems ] = useState()\r\n  const sortTable = (column) => {\r\n    const newDirection = direction === \"desc\" ? \"asc\" : \"desc\"\r\n    const sortedData = _.orderBy(students, [column], [newDirection])\r\n    setSelectedColumn(column)\r\n    setDirection(newDirection)\r\n    setStudents(sortedData)\r\n  }\r\n  const tableHeader = () => (\r\n\r\n    <View style={styles.tableHeader} >\r\n\r\n\r\n      {\r\n        columns.map((column, index) => {\r\n          {\r\n            return (\r\n\r\n\r\n              <TouchableOpacity\r\n                key={index}\r\n                style={styles.columnHeader}\r\n                onPress={() => sortTable(column)}>\r\n                <Text style={styles.columnHeaderTxt}>{column + \"\"}\r\n                  {selectedColumn === column && <MaterialCommunityIcons\r\n                    name={direction === \"desc\" ? \"arrow-down-drop-circle\" : \"arrow-up-drop-circle\"}\r\n                  />\r\n                  }\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n\r\n            )\r\n          }\r\n        })\r\n      }\r\n    </View>\r\n\r\n  )\r\n\r\n  return (\r\n\r\n  \r\n    <View style={{ height: windowHeight,width:'100%' }}>\r\n\r\n      <View >\r\n        <ClassSectionFilter />\r\n      </View>\r\n    \r\n      <FlatList\r\n        data={students}\r\n        keyExtractor={(item, index) => index + \"\"}\r\n        style={{ maxWidth: '100%' }}\r\n        ListHeaderComponent={tableHeader}\r\n        stickyHeaderIndices={[0]}\r\n        extraData={students}\r\n        renderItem={({ item, index }) => {\r\n        console.log(item)\r\n          return (\r\n            <View style={{ ...styles.tableRow, backgroundColor: index % 2 == 1 ? \"#F0FBFC\" : \"white\", width: '100%', }}>   \r\n              <Text style={{ ...styles.columnRowTxt, fontWeight: \"bold\" }}>{item?.roll_no}</Text>\r\n              <Text style={{ ...styles.columnRowTxt }}>{item.first_name}</Text>\r\n              <ScrollView horizontal={true}\r\n                showsHorizontalScrollIndicator={true}\r\n                pagingEnabled={true}\r\n                style={{width:'150%'}}\r\n                >\r\n              <View style={{  flexDirection: 'row',left:40 }}>\r\n                <View \r\n                style={{\r\n                  left:23\r\n                  \r\n                }}\r\n                >\r\n                \r\n                <CheckBox\r\n                  title='P'\r\n                  checkedColor='green'\r\n                  checked={item.attendance==='P'? true:false}                    \r\n                  checkedIcon =\"dot-circle-o\"\r\n                  unCheckedIcon='circle-o'\r\n                  onPress={()=>MarkAttendance(item,'P')}\r\n                  containerStyle={{\r\n                  alignItems:'center',\r\n                  justifyContent:'center',\r\n       \r\n                  height:50,  \r\n                  right:50,\r\n                  alignItems:'center',\r\n                  justifyContent:'center',\r\n                  top:-10,\r\n                  backgroundColor:'transparent'\r\n                  }}\r\n                  /> \r\n\r\n          {/* <BouncyCheckbox\r\n            size={20}\r\n            fillColor=\"green\"\r\n            unfillColor=\"#FFFFFF\"\r\n            text=\"P\"\r\n            iconStyle={{  }}\r\n            textStyle={{  }}\r\n            onPress={()=>MarkPresent()}\r\n            isChecked={false}\r\n            /> */}\r\n\r\n\r\n                </View>\r\n                <View style={{\r\n                    left:5\r\n                }}>             \r\n              <CheckBox\r\n                  title='A'\r\n                  checkedColor='red'\r\n                  checked={item.attendanc=='a'?true:false}\r\n                  checkedIcon =\"dot-circle-o\"\r\n                  unCheckedIcon='circle-o'\r\n\r\n                  onPress={()=>MarkAttendance(index,'a')}\r\n                  containerStyle={{\r\n                  alignItems:'center',\r\n                  justifyContent:'center',\r\n        \r\n                  height:50,  \r\n                  right:50,\r\n                  alignItems:'center',\r\n                  justifyContent:'center',\r\n                  top:-10,\r\n                  backgroundColor:'transparent'\r\n                  }}\r\n                  />\r\n\r\n          {/* <BouncyCheckbox\r\n            size={20}\r\n            fillColor=\"red\"\r\n            unfillColor=\"#FFFFFF\"\r\n            text=\"A\"\r\n            iconStyle={{  }}\r\n            textStyle={{  }}\r\n            onPress={()=>MarkAbsent()}\r\n    /> */}\r\n                </View>\r\n\r\n\r\n                <View style={{\r\n                    left:5,\r\n                }}>\r\n                <CheckBox\r\n                title='L'\r\n                checkedColor='gray'\r\n\r\n                checked={item.attendanc=='l'?true:false}\r\n                checkedIcon ='dot-circle-o'\r\n                unCheckedIcon='circle-o'\r\n                onPress={()=>MarkAttendance(index,'l')}\r\n                containerStyle={{\r\n                  alignItems:'center',\r\n                  justifyContent:'center',\r\n \r\n                  height:50,  \r\n                  right:70,\r\n                  alignItems:'center',\r\n                  justifyContent:'center',\r\n                  top:-10,\r\n                  backgroundColor:'transparent',\r\n                  \r\n                  }}\r\n                  \r\n                />\r\n\r\n        {/* <BouncyCheckbox\r\n          size={20}\r\n          fillColor=\"gray\"\r\n          unfillColor=\"#FFFFFF\"\r\n          text=\"L\"\r\n          iconStyle={{  }}\r\n          textStyle={{  }}\r\n          onPress={(isChecked)=>MarkLeave({isChecked})}\r\n          isChecked = {MarkLeave === setLeave ? true : false  }\r\n    />\r\n                */}\r\n\r\n</View>\r\n\r\n\r\n              </View>\r\n              </ScrollView>\r\n            </View>\r\n\r\n          )\r\n        }}\r\n      />\r\n    \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  tableHeader: {\r\n\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#5062BD\",\r\n    borderTopEndRadius: 10,\r\n    borderTopStartRadius: 10,\r\n    height: 50,\r\n    \r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    margin: 2,\r\n    left: 8\r\n  },\r\n  columnHeader: {\r\n    width: \"16%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    margin: 10\r\n  },\r\n  columnHeaderTxt: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n\r\n\r\n  },\r\n  columnRowTxt: {\r\n    width: \"18%\",\r\n  }\r\n\r\n});\r\n\r\nexport default MarkAttendanceScreen"]},"metadata":{},"sourceType":"module"}