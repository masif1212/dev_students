{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { Divider } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DpFullAttendance = function DpFullAttendance() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDatePickerVisible = _useState4[0],\n      setDatePickerVisibility = _useState4[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setDate(date);\n    hideDatePicker();\n    searchFilter(date);\n  };\n\n  var getDate = function getDate() {\n    var tempDate = date.toString().split(' ');\n    return date !== '' ? tempDate[0] + \" \" + tempDate[1] + \" \" + tempDate[2] + \" \" + tempDate[3] : '';\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 18,\n          top: 40,\n          left: 7,\n          fontWeight: 'bold'\n        },\n        children: \"Filter\"\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: showDatePicker,\n        children: _jsx(Text, {\n          style: {\n            borderWidth: 1,\n            borderColor: '#8099F7',\n            borderRadius: 10,\n            padding: 7,\n            backgroundColor: '#5062BD',\n            color: 'white',\n            fontSize: 14\n          },\n          children: \"Set Date\"\n        })\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        value: getDate(),\n        placeholder: \"Day| MM | DD | YY\"\n      })]\n    }), _jsx(DateTimePickerModal, {\n      isVisible: isDatePickerVisible,\n      mode: \"date\",\n      onConfirm: handleConfirm,\n      onCancel: hideDatePicker,\n      onChangeText: function onChangeText(date) {\n        return searchFilter(date);\n      }\n    }), _jsx(Divider, {\n      borderWidth: 0.2,\n      width: '100%',\n      margin: 5\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 35,\n          fontWeight: 'bold',\n          left: 5\n        },\n        children: \"Class : 5th\"\n      }), _jsx(Text, {\n        style: {\n          left: 5\n        },\n        children: \"School Name\"\n      })]\n    }), _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        top: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          left: 5\n        },\n        children: \"Section : A\"\n      })\n    }), _jsx(Divider, {\n      margin: 13\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 15\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#8099F7',\n    marginBottom: 5,\n    padding: 3,\n    marginLeft: 4,\n    borderRadius: 10\n  }\n});\nexport default DpFullAttendance;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/singleStudentAttendance/DpFullAttendance .js"],"names":["React","useState","DateTimePickerModal","Divider","DpFullAttendance","date","setDate","isDatePickerVisible","setDatePickerVisibility","showDatePicker","hideDatePicker","handleConfirm","searchFilter","getDate","tempDate","toString","split","styles","container","flexDirection","fontSize","top","left","fontWeight","justifyContent","borderWidth","borderColor","borderRadius","padding","backgroundColor","color","textInput","StyleSheet","create","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, StyleSheet, Text, TouchableOpacity,ScrollView } from 'react-native';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport {Divider} from 'react-native-paper';\r\n\r\n\r\n\r\n\r\n\r\nconst DpFullAttendance    = () => {\r\n  const [date, setDate] = useState('');\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n\r\n\r\n\r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n    \r\n\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n    \r\n  };\r\n\r\n  const handleConfirm = (date) => {\r\n    setDate(date);\r\n    hideDatePicker();\r\n    searchFilter(date)\r\n  };\r\n\r\n\r\n  const getDate = () => {\r\n    let tempDate = date.toString().split(' ');\r\n    return date !== ''\r\n      ? `${tempDate[0]} ${tempDate[1]} ${tempDate[2]} ${tempDate[3]}`\r\n      : '';\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n \r\n    \r\n     <View style={{flexDirection:'row'}}>\r\n     <Text \r\n     style={{\r\n         fontSize: 18,\r\n         top: 40,\r\n         left:7,\r\n         fontWeight: 'bold'\r\n          }}\r\n     >Filter</Text>\r\n     </View>\r\n    <View style={{\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end' \r\n    }}>\r\n    \r\n    <TouchableOpacity  onPress={showDatePicker}>\r\n        <Text style={{borderWidth: 1,borderColor:'#8099F7',borderRadius: 10,  padding: 7, backgroundColor: '#5062BD', color: 'white', fontSize:14}}>Set Date</Text>\r\n    </TouchableOpacity>\r\n   \r\n    <TextInput\r\n        style={styles.textInput}\r\n        value={getDate()}\r\n        placeholder=\"Day| MM | DD | YY\"\r\n      />\r\n      \r\n    </View>\r\n\r\n    \r\n      \r\n      <DateTimePickerModal\r\n        isVisible={isDatePickerVisible}\r\n        mode=\"date\"\r\n        onConfirm={handleConfirm}\r\n        onCancel={hideDatePicker}\r\n        onChangeText={(date) => searchFilter(date)}\r\n       \r\n      />\r\n\r\n      \r\n       <Divider borderWidth={0.2} width={'100%'} margin={5}/>\r\n\r\n\r\n       <View>\r\n      <Text style={{\r\n          fontSize:35,\r\n          fontWeight: 'bold',\r\n          left: 5\r\n\r\n      }}>Class : 5th</Text>\r\n      <Text style={{\r\n        left: 5\r\n      }} >School Name</Text>\r\n    </View>\r\n    {/* add pie here */}\r\n\r\n    <View style={{flexDirection: 'row', top:10}}>\r\n      <Text  style={{\r\n        left:5\r\n      }}>Section : A</Text>\r\n      \r\n    </View>\r\n\r\n       <Divider margin={13} />\r\n\r\n    </View>\r\n   \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 15\r\n\r\n  },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#8099F7',\r\n    marginBottom: 5,\r\n    padding: 3,\r\n    marginLeft: 4,\r\n    borderRadius: 10,\r\n    \r\n  },\r\n});\r\nexport default DpFullAttendance  "]},"metadata":{},"sourceType":"module"}