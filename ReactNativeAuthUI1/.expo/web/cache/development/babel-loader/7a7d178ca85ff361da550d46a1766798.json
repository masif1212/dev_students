{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport _ from \"lodash\";\nimport DpFullAttendance from \"./DpFullAttendance \";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ViewFullAttendance = function ViewFullAttendance(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([\"Roll No\", \"Students\", \"Status\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      columns = _useState2[0],\n      setColumns = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      direction = _useState4[0],\n      setDirection = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedColumn = _useState6[0],\n      setSelectedColumn = _useState6[1];\n\n  var _useState7 = useState([{\n    Roll_No: '1',\n    name: \"Saad\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '2',\n    name: \"Asif\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '3',\n    name: \"Mehdi\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '4',\n    name: \"Ali\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '5',\n    name: \"Hamza\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '6',\n    name: \"Saad\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '7',\n    name: \"Sofia\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '8',\n    name: \"Sofia\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '9',\n    name: \"Mehdi\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '10',\n    name: \"Salman\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '11',\n    name: \"Mehdi\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '12',\n    name: \"Mehdi\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '13',\n    name: \"Alina\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '14',\n    name: \"Asif\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '15',\n    name: \"Saad\",\n    Status: \"Absent\"\n  }, {\n    Roll_No: '16',\n    name: \"Awais\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '17',\n    name: \"Maryam\",\n    Status: \"Present\"\n  }, {\n    Roll_No: '18',\n    name: \"Aimen\",\n    Status: \"Absent\"\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pets = _useState8[0],\n      setPets = _useState8[1];\n\n  var sortTable = function sortTable(column) {\n    var newDirection = direction === \"desc\" ? \"asc\" : \"desc\";\n\n    var sortedData = _.orderBy(pets, [column], [newDirection]);\n\n    setSelectedColumn(column);\n    setDirection(newDirection);\n    setPets(sortedData);\n  };\n\n  var tableHeader = function tableHeader() {\n    return _jsx(View, {\n      style: styles.tableHeader,\n      children: columns.map(function (column, index) {\n        {\n          return _jsx(TouchableOpacity, {\n            style: styles.columnHeader,\n            onPress: function onPress() {\n              return sortTable(column);\n            },\n            children: _jsxs(Text, {\n              style: styles.columnHeaderTxt,\n              children: [column + \" \", selectedColumn === column && _jsx(MaterialCommunityIcons, {\n                name: direction === \"desc\" ? \"arrow-down-drop-circle\" : \"arrow-up-drop-circle\"\n              })]\n            })\n          }, index);\n        }\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      height: '100%'\n    },\n    children: [_jsx(View, {\n      style: {\n        width: \"100%\"\n      },\n      children: _jsx(DpFullAttendance, {})\n    }), _jsx(FlatList, {\n      data: pets,\n      style: {\n        width: \"100%\"\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index + \"\";\n      },\n      ListHeaderComponent: tableHeader,\n      stickyHeaderIndices: [0],\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.tableRow), {}, {\n            backgroundColor: index % 2 == 1 ? \"#F0FBFC\" : \"white\",\n            width: '100%'\n          }),\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.columnRowTxt), {}, {\n              fontWeight: \"bold\",\n              right: 25\n            }),\n            children: item.Roll_No\n          }), _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.columnRowTxt), {}, {\n              right: 20\n            }),\n            children: item.name\n          }), _jsx(Text, {\n            style: styles.columnRowTxt,\n            children: item.Status\n          })]\n        });\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  tableHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"#5062BD\",\n    borderTopEndRadius: 10,\n    borderTopStartRadius: 10,\n    height: 50,\n    width: \"100%\"\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    height: 40,\n    alignItems: \"center\"\n  },\n  columnHeader: {\n    width: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  columnHeaderTxt: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  columnRowTxt: {\n    width: \"35%\",\n    textAlign: \"center\"\n  }\n});\nexport default ViewFullAttendance;","map":{"version":3,"sources":["F:/js-files/dev_students/ReactNativeAuthUI1/app/screen/singleStudentAttendance/ViewFullAttendance.js"],"names":["StatusBar","React","useState","useEffect","MaterialCommunityIcons","_","DpFullAttendance","ViewFullAttendance","navigation","columns","setColumns","direction","setDirection","selectedColumn","setSelectedColumn","Roll_No","name","Status","pets","setPets","sortTable","column","newDirection","sortedData","orderBy","tableHeader","styles","map","index","columnHeader","columnHeaderTxt","height","width","item","tableRow","backgroundColor","columnRowTxt","fontWeight","right","StyleSheet","create","flexDirection","justifyContent","alignItems","borderTopEndRadius","borderTopStartRadius","color","textAlign"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport _ from \"lodash\"\r\nimport DpFullAttendance from './DpFullAttendance ';\r\n\r\n\r\n\r\n\r\nconst  ViewFullAttendance = ({navigation})=> {\r\n  const [ columns, setColumns ] = useState([\r\n    \"Roll No\",\r\n    \"Students\",\r\n    \"Status\"\r\n\r\n  ])\r\n  const [ direction, setDirection ] = useState(null)\r\n  const [ selectedColumn, setSelectedColumn ] = useState(null)\r\n  const [ pets, setPets ] = useState([\r\n    {\r\n      Roll_No : '1',\r\n      name: \"Saad\",\r\n      Status: \"Present\"\r\n    },\r\n    {\r\n        Roll_No : '2',\r\n      name: \"Asif\",\r\n      Status: \"Absent\"\r\n    },\r\n    {\r\n        Roll_No : '3',\r\n      name: \"Mehdi\",\r\n      Status: \"Absent\"\r\n    },\r\n    {\r\n        Roll_No : '4',\r\n      name: \"Ali\",\r\n      Status: \"Present\"\r\n    },\r\n    {\r\n        Roll_No : '5',\r\n      name: \"Hamza\",\r\n      Status: \"Absent\"\r\n    },\r\n    {\r\n        Roll_No : '6',\r\n      name: \"Saad\",\r\n      Status: \"Absent\"\r\n    },\r\n    {\r\n        Roll_No : '7',\r\n      name: \"Sofia\",\r\n      Status: \"Present\"\r\n    },\r\n    {\r\n        Roll_No : '8',\r\n      name: \"Sofia\",\r\n      Status: \"Absent\"\r\n    },\r\n    {\r\n        Roll_No : '9',\r\n      name: \"Mehdi\",\r\n      Status: \"Present\"\r\n    },\r\n    {\r\n        Roll_No : '10',\r\n      name: \"Salman\",\r\n      Status: \"Present\"\r\n    },\r\n    {\r\n        Roll_No : '11',\r\n      name: \"Mehdi\",\r\n      Status: \"Present\"\r\n    },\r\n    {\r\n        Roll_No : '12',\r\n      name: \"Mehdi\",\r\n      Status: \"Absent\"\r\n    },  \r\n     {\r\n        Roll_No : '13',\r\n        name: \"Alina\",\r\n        Status: \"Present\"\r\n      },\r\n      {\r\n        Roll_No : '14',\r\n        name: \"Asif\",\r\n        Status: \"Present\"\r\n      },\r\n      {\r\n        Roll_No : '15',\r\n        name: \"Saad\",\r\n        Status: \"Absent\"\r\n      },\r\n      {\r\n        Roll_No : '16',\r\n        name: \"Awais\",\r\n        Status: \"Present\"\r\n      },\r\n      {\r\n        Roll_No : '17',\r\n        name: \"Maryam\",\r\n        Status: \"Present\"\r\n      },\r\n      {\r\n        Roll_No : '18',\r\n        name: \"Aimen\",\r\n        Status: \"Absent\"\r\n      }\r\n  ])\r\n\r\n\r\n  \r\n  \r\n\r\n  const sortTable = (column) => {\r\n    const newDirection = direction === \"desc\" ? \"asc\" : \"desc\" \r\n    const sortedData = _.orderBy(pets, [column],[newDirection])\r\n    setSelectedColumn(column)\r\n    setDirection(newDirection)\r\n    setPets(sortedData)\r\n  }\r\n  const tableHeader = () => (\r\n    <View style={styles.tableHeader}>\r\n      {\r\n        columns.map((column, index) => {\r\n          {\r\n            return (\r\n              <TouchableOpacity \r\n                key={index}\r\n                style={styles.columnHeader} \r\n                onPress={()=> sortTable(column)}>\r\n                <Text style={styles.columnHeaderTxt}>{column + \" \"} \r\n                  { selectedColumn === column && <MaterialCommunityIcons \r\n                      name={direction === \"desc\" ? \"arrow-down-drop-circle\" : \"arrow-up-drop-circle\"} \r\n                    />\r\n                  }\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )\r\n          }\r\n        })\r\n      }\r\n    </View>\r\n  )\r\n\r\n  return (\r\n    <View style={{height:'100%'}}>\r\n\r\n    <View style={{width:\"100%\"}}>\r\n      <DpFullAttendance />\r\n    </View>\r\n\r\n      <FlatList \r\n        data={pets}\r\n        style={{width:\"100%\"}}\r\n        keyExtractor={(item, index) => index+\"\"}\r\n        ListHeaderComponent={tableHeader}\r\n        stickyHeaderIndices={[0]}\r\n        renderItem={({item, index})=> {\r\n          return (\r\n            <View style={{...styles.tableRow, backgroundColor: index % 2 == 1 ? \"#F0FBFC\" : \"white\",width:'100%'}}>\r\n             <Text style={{...styles.columnRowTxt, fontWeight:\"bold\", right: 25}}>{item.Roll_No}</Text>\r\n              <Text style={{...styles.columnRowTxt, right:20}}>{item.name}</Text>\r\n              <Text style={styles.columnRowTxt}>{item.Status}</Text>\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n      <StatusBar style=\"auto\" />\r\n      </View>\r\n      \r\n  \r\n   \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  tableHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#5062BD\",\r\n    borderTopEndRadius: 10,\r\n    borderTopStartRadius: 10,\r\n    height: 50,\r\n    width: \"100%\",\r\n\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    alignItems:\"center\",\r\n  },\r\n  columnHeader: {\r\n    width: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems:\"center\",\r\n \r\n  },\r\n  columnHeaderTxt: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  columnRowTxt: {\r\n    width:\"35%\",\r\n    textAlign:\"center\",\r\n  }\r\n});\r\n\r\nexport default ViewFullAttendance"]},"metadata":{},"sourceType":"module"}